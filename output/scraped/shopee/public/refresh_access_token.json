{
  "platform": "shopee",
  "module": "public",
  "endpoint_name": "refresh_access_token",
  "version": "v2",
  "summary": "Use the code and shop_id or main_account_id from the authorization step to call this API to obtain the shop_id, merchant_id, access_token and refresh_token",
  "description": "Use the code and shop_id or main_account_id from the authorization step to call this API to obtain the shop_id, merchant_id, access_token and refresh_token.",
  "path": "/api/v2/auth/token/get",
  "http_method": [
    "POST"
  ],
  "parameters": {
    "path": [],
    "query": [
      {
        "name": "refresh_token",
        "type": "string",
        "required": true,
        "description": "Use refresh_token to get a new access_token. Each refresh_token is valid for 30 days, and can only be used once by either a shop_id or merchant_id.",
        "sample": ""
      },
      {
        "name": "partner_id",
        "type": "int",
        "required": true,
        "description": "The partner_id obtained from the App. This partner_id is inserted into the body.",
        "sample": ""
      },
      {
        "name": "shop_id",
        "type": "int",
        "required": false,
        "description": "The shop_id of the main account that granted authorization to your App. Only the shop_id or merchant_id can be selected as the input parameter, and they must be refreshed separately.",
        "sample": ""
      },
      {
        "name": "merchant_id",
        "type": "int",
        "required": false,
        "description": "The merchant_id for identifying the main account that granted authorization to your App. Only the shop_id or merchant_id can be selected as the input parameter, and they must be refreshed separately.",
        "sample": ""
      }
    ],
    "header": [],
    "body": [],
    "common": []
  },
  "request_examples": [
    {
      "language": "payload",
      "code": "{\"shop_id\":322300222,\n\"refresh_token\":\"4c7259534969484e71734d695a6e6d55\",\n\"partner_id\":2001887\n}"
    }
  ],
  "response": {
    "schema": [
      {
        "name": "partner_id",
        "type": "int",
        "sample": "",
        "description": "Returned when the API call is successful.The partner_id you used for this refresh"
      },
      {
        "name": "refresh_token",
        "type": "string",
        "sample": "",
        "description": "New refresh_tokenReturned when the API call is successful.Use a refresh_token to get a new access_token.Each refresh_token is valid for 30 days, and can only be used once by either a shop_id or merchant_id."
      },
      {
        "name": "access_token",
        "type": "string",
        "sample": "",
        "description": "Returned when the API call is successful.Each new access_token is a dynamic token that can be used multiple times. It expires after 4 hours."
      },
      {
        "name": "expire_in",
        "type": "int",
        "sample": "",
        "description": "Returned when the API call is successful.The validity period of the access_token, in seconds."
      },
      {
        "name": "request_id",
        "type": "string",
        "sample": "",
        "description": "ID of API requests; always returned.Used to diagnose problems."
      },
      {
        "name": "error",
        "type": "string",
        "sample": "",
        "description": "Error codes for API requests; always returned.When the API call is successful, the error code returned is empty."
      },
      {
        "name": "message",
        "type": "string",
        "sample": "",
        "description": "Always returned. Provides detailed error information."
      },
      {
        "name": "shop_id",
        "type": "int",
        "sample": "",
        "description": "Returned when the API call is successful.The shop_id for this refresh"
      },
      {
        "name": "merchant_id",
        "type": "int",
        "sample": "",
        "description": "Returned when the API call is successful.The merchant_id for this refresh, for identifying each merchant."
      }
    ],
    "examples": [
      {
        "language": "json",
        "code": "{\n    \"partner_id\": 2001887,\n    \"refresh_token\": \"516c6b577753554375764a63704d7245\",\n    \"access_token\": \"71594a4c54537649697341796363674a\",\n    \"expire_in\": 14400,\n    \"request_id\": \"83089a02e46d77b64882c0c93aba5267\",\n    \"error\": \"\",\n    \"message\": \"\",\n    \"shop_id\": 322300222\n}"
      }
    ]
  },
  "error_codes": [
    {
      "code": "error_param",
      "message": "Invalid partner_id."
    },
    {
      "code": "error_param",
      "message": "There is no partner_id in query."
    },
    {
      "code": "error_auth",
      "message": "No permission to current api."
    },
    {
      "code": "error_param",
      "message": "There is no sign in query."
    },
    {
      "code": "error_sign",
      "message": "Wrong sign."
    },
    {
      "code": "error_param",
      "message": "no timestamp"
    },
    {
      "code": "error_param",
      "message": "Invalid timestamp"
    },
    {
      "code": "error_network",
      "message": "Inner http call failed"
    },
    {
      "code": "merchant_access_expired",
      "message": "Your access to merchant has expired."
    },
    {
      "code": "merchant_no_linked",
      "message": "Partner and merchant has no linked."
    },
    {
      "code": "error_merchant_refresh_token",
      "message": "Your refresh token is error,please check refresh token or merchant_id."
    },
    {
      "code": "shop_banned",
      "message": "The shop account has been banned. Permissions for shop authorization and API calls have been suspended until the shop account is restored."
    },
    {
      "code": "refresh_token_expired",
      "message": "Your refresh_token expired."
    },
    {
      "code": "shop_access_expired",
      "message": "Your access to shop has expired."
    },
    {
      "code": "shop_banned",
      "message": "The shop account has been banned. Permissions for shop authorization and API calls have been suspended until the shop account is restored."
    },
    {
      "code": "shop_no_linked",
      "message": "Partner and shop has no linked."
    },
    {
      "code": "error_shop_refresh_token",
      "message": "Your refresh token is error ,please check refresh token or shopid."
    },
    {
      "code": "supplier_access_expired",
      "message": "Your access to supplier has expired."
    },
    {
      "code": "supplier_no_linked",
      "message": "Partner and Supplier has no linked."
    },
    {
      "code": "error_merchant_refresh_token",
      "message": "Your refresh token is error ,please check refresh token or supplier_id."
    }
  ],
  "platform_specific": {
    "service_endpoints": [
      {
        "surroundings": "URL",
        "http_address": "https://partner.shopeemobile.com/api/v2/auth/token/get"
      },
      {
        "surroundings": "URL（Chinese Mainland）",
        "http_address": "https://openplatform.shopee.cn/api/v2/auth/token/get"
      },
      {
        "surroundings": "URL（Brazil）",
        "http_address": "https://openplatform.shopee.com.br/api/v2/auth/token/get"
      },
      {
        "surroundings": "Test URL",
        "http_address": "https://partner.test-stable.shopeemobile.com/api/v2/auth/token/get"
      },
      {
        "surroundings": "Test URL（Chinese Mainland）",
        "http_address": "https://openplatform.test-stable.shopee.cn/api/v2/auth/token/get"
      },
      {
        "surroundings": "Test URL Sandbox v2",
        "http_address": "https://openplatform.sandbox.test-stable.shopee.sg/api/v2/auth/token/get"
      },
      {
        "surroundings": "Test URL（Chinese Mainland） Sandbox v2",
        "http_address": "https://openplatform.sandbox.test-stable.shopee.cn/api/v2/auth/token/get"
      }
    ]
  }
}