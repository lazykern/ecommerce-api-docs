{
  "platform": "tiktok_shop",
  "module": "return_refund",
  "endpoint_name": "returns",
  "version": "202309",
  "summary": "Use this API to initiate a return request on behalf of the buyer Sellers can reject the request, or accept and issue: -Return and Refund (buyer must send package back) -Returnless Refund (buyer can keep the item) -Partial Refund (Seller issues a partial refund, buyer can keep the item) Version\n202309\n  \nAPI Testing Tool",
  "description": "Use this API to initiate a return request on behalf of the buyer Sellers can reject the request, or accept and issue: -Return and Refund (buyer must send package back) -Returnless Refund (buyer can keep the item) -Partial Refund (Seller issues a partial refund, buyer can keep the item) Version\n202309\n  \nAPI Testing Tool",
  "path": "/return_refund/202309/returns",
  "http_method": [
    "POST"
  ],
  "parameters": {
    "path": [],
    "query": [
      {
        "properties": "shop_cipher Required",
        "type": "string",
        "description": "Use this property to pass shop information in requesting the API. Failure in passing the correct value when requesting the API for cross-border shops will return incorrect response.  Get by API Get Authorization Shop"
      },
      {
        "properties": "app_key",
        "type": "string",
        "description": "Every single app will have a unique key. Please use the specific key assigned to your app."
      },
      {
        "properties": "sign",
        "type": "string",
        "description": "Signature generated by gen algorithm. When you send API requests to TTS, you must sign them so that TTS can identify the senders."
      },
      {
        "properties": "timestamp",
        "type": "int",
        "description": "Unix timestamp GMT (UTC+00:00). This timestamp is used across all API requests. Developers can use this convert to local time."
      },
      {
        "properties": "idempotency_key",
        "type": "string",
        "description": "Idempotency Key"
      }
    ],
    "header": [
      {
        "properties": "content-type Required",
        "type": "string",
        "description": "Allowed type: application/json"
      },
      {
        "properties": "x-tts-access-token Required",
        "type": "string",
        "description": "The seller access_token value from Get Access Token, when user_type = 0. Follow this guide to get seller access_token."
      }
    ],
    "body": [
      {
        "properties": "order_id Required",
        "type": "string",
        "description": "Tiktok Shop order id"
      },
      {
        "properties": "skus",
        "type": "[]object",
        "description": "Skus",
        "children": [
          {
            "properties": "sku_id Required",
            "type": "string",
            "description": "Sku id seller wants to create a return request"
          },
          {
            "properties": "quantity Required",
            "type": "int",
            "description": "Quantity seller wants to create a return request"
          },
          {
            "properties": "order_line_item_ids",
            "type": "[]string",
            "description": "Order line ids seller wants to create return request, should use order line ids to create return request if had split parcel to multiple packages, default value is all order line ids in the order if not input order_line_ids and skus"
          },
          {
            "properties": "return_reason Required",
            "type": "string",
            "description": "Seller's reason to create a return"
          },
          {
            "properties": "return_type Required",
            "type": "string",
            "description": "Which type to create:  - REFUND - RETURN_AND_REFUND"
          },
          {
            "properties": "refund_total",
            "type": "string",
            "description": "Total refund amount to the buyer.  The total refund amount can not exceed the refundable amount"
          },
          {
            "properties": "currency",
            "type": "string",
            "description": "Currency for refund which should be same as currency in TikTok Ship Order."
          },
          {
            "properties": "shipment_type",
            "type": "string",
            "description": "How buyer ships items to seller when in a return request, could be: - PLATFORM - BUYER_ARRANGE"
          },
          {
            "properties": "handover_method",
            "type": "string",
            "description": "Which handover method buyer chooses to use when returning goods to seller by platform - DROP_OFF - PICKUP"
          }
        ]
      }
    ],
    "common": []
  },
  "request_examples": [],
  "response": {
    "schema": [
      {
        "properties": "code",
        "type": "int",
        "description": "The success or failure status code returned in API response."
      },
      {
        "properties": "message",
        "type": "string",
        "description": "The success or failure messages returned in API response. Reasons of failure will be described in the message."
      },
      {
        "properties": "request_id",
        "type": "string",
        "description": "Request log"
      },
      {
        "properties": "data",
        "type": "object",
        "description": "Specific return information",
        "children": [
          {
            "properties": "return_id",
            "type": "string",
            "description": "The identifier of a specific return request."
          },
          {
            "properties": "return_status",
            "type": "string",
            "description": "Return status, available values: - RETURN_OR_REFUND_REQUEST_PENDING: Request is pending, needs to be approved by seller or platform - REFUND_OR_RETURN_REQUEST_REJECT: Seller rejected the request - AWAITING_BUYER_SHIP: Waiting buyer to ship items to seller, if exceed the deadline, request will be closed by platform - BUYER_SHIPPED_ITEM: Buyer has shipped items to seller. - REJECT_RECEIVE_PACKAGE: Seller reject return package - RETURN_OR_REFUND_REQUEST_SUCCESS: The refund/return request is successful, buyer will be refunded. - RETURN_OR_REFUND_REQUEST_CANCEL: The request has been cancelled by buyer or system - RETURN_OR_REFUND_REQUEST_COMPLETE: The request is successful, and the amount has been refunded."
          }
        ]
      }
    ],
    "examples": [
      {
        "language": "json",
        "code": "{\n  \"code\": 0,\n  \"data\": {\n    \"return_id\": \"4035319218955782461\",\n    \"return_status\": \"RETURN_OR_REFUND_REQUEST_PENDING\"\n  },\n  \"message\": \"Success\",\n  \"request_id\": \"202203070749000101890810281E8C70B7\"\n}"
      }
    ]
  },
  "error_codes": [
    {
      "code": "25001001",
      "message": "An invalid request parameter was passed. Please check that you have the correct parameter type(s) and format."
    },
    {
      "code": "25001003",
      "message": "A return request cannot be created due to an invalid order status."
    },
    {
      "code": "25001010",
      "message": "A return request has already been completed, or the order has already been cancelled."
    },
    {
      "code": "25001011",
      "message": "A return request is already in process, or the order has already been cancelled."
    },
    {
      "code": "25001014",
      "message": "Unknown return reason. Please ensure you are passing a valid return reason."
    },
    {
      "code": "25001015",
      "message": "The provided return reason cannot be used by the seller. Please select a valid return reason and try again."
    },
    {
      "code": "25001020",
      "message": "The provided return reason is currently offline. Please select a different return reason."
    },
    {
      "code": "25001021",
      "message": "The return reason does not match the order status."
    },
    {
      "code": "25001028",
      "message": "You are trying to create a duplicate return request that is already in process."
    },
    {
      "code": "25001042",
      "message": "Return package creation has failed due to internal error."
    },
    {
      "code": "25001046",
      "message": "Return request has failed due to an interception by TikTok risk control."
    },
    {
      "code": "25001051",
      "message": "You are unable to create a return request since the order status is COMPLETED or CANCELLED."
    },
    {
      "code": "25005005",
      "message": "Refund total amount is larger than the refundable amount."
    },
    {
      "code": "25005010",
      "message": "Unable to cancel individual line items within this request."
    },
    {
      "code": "25005011",
      "message": "The requested line item(s) for return or refund exceeds the allowable limit."
    },
    {
      "code": "25020005",
      "message": "You do not have the permission(s) to create a return request for this order."
    }
  ],
  "platform_specific": {
    "original_url": "https://partner.tiktokshop.com/docv2/page/650ae5fc4a0bb702c075d05d"
  }
}