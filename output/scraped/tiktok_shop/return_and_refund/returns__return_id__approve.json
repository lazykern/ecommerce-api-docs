{
  "platform": "tiktok_shop",
  "module": "return_and_refund",
  "endpoint_name": "returns_{return_id}_approve",
  "version": "202309",
  "summary": "Use this API to approve a buyer's return request",
  "description": "Use this API to approve a buyer's return request. Version\n202309\n  \nAPI Testing Tool",
  "path": "/return_refund/202309/returns/{return_id}/approve",
  "http_method": [
    "POST"
  ],
  "parameters": {
    "path": [],
    "query": [
      {
        "properties": "shop_cipher Required",
        "type": "string",
        "description": "Use this property to pass shop information in requesting the API. Failure in passing the correct value when requesting the API for cross-border shops will return incorrect response.  Get by API Get Authorization Shop"
      },
      {
        "properties": "app_key Required",
        "type": "string",
        "description": "Every single app will have a unique key. Please use the specific key assigned to your app."
      },
      {
        "properties": "sign Required",
        "type": "string",
        "description": "Signature generated by gen algorithm. When you send API requests to TTS, you must sign them so that TTS can identify the senders."
      },
      {
        "properties": "timestamp Required",
        "type": "int",
        "description": "Unix timestamp GMT (UTC+00:00). This timestamp is used across all API requests. Developers can use this convert to local time."
      },
      {
        "properties": "idempotency_key",
        "type": "string",
        "description": "The idempotency key is a unique value generated by the client which the server uses to recognize the same request. How you create unique keys is up to you, but we suggest using UUIDs, or another random string with enough entropy to avoid collisions. Idempotency keys can be up to 255 characters long."
      }
    ],
    "header": [
      {
        "properties": "content-type Required",
        "type": "string",
        "description": "Allowed type: application/json"
      },
      {
        "properties": "x-tts-access-token Required",
        "type": "string",
        "description": "The seller access_token value from Get Access Token, when user_type = 0. Follow this guide to get seller access_token."
      }
    ],
    "body": [
      {
        "properties": "decision Required",
        "type": "string",
        "description": "Seller's decision for the return request, available values: - APPROVE_REFUND: seller approve refund request - APPROVE_RETURN: seller approve return request - APPROVE_RECEIVED_PACKAGE: seller approve received package - APPROVE_REPLACEMENT: seller approve replacement request - ISSUE_REPLACEMENT_REFUND: seller decline the replacement request and directly refund to buyer. - OFFER_PARTIAL_REFUND: seller offer partial refund. Partial refund no need buyer to return the product. If buyer accept partial refund, seller only refund the partial amount and buyer keep the item(s)."
      },
      {
        "properties": "buyer_keep_item",
        "type": "bool",
        "description": "If true, the seller will issue a returnless refund. In other words, the seller will refund without requiring the buyer to send the product back to the seller.  Note: Seller's decision for the return request should be APPROVE_RETURN"
      },
      {
        "properties": "partial_refund",
        "type": "object",
        "description": "Partial refund amount to buyer",
        "children": [
          {
            "properties": "currency",
            "type": "string",
            "description": "Refund currency"
          },
          {
            "properties": "amount",
            "type": "string",
            "description": "If seller would like to offer partial refund to buyer, should enter the refund amount. Note: Seller's decision for the return request should be OFFER_PARTIAL_REFUND"
          }
        ]
      }
    ],
    "common": []
  },
  "request_examples": [],
  "response": {
    "schema": [
      {
        "properties": "code",
        "type": "int",
        "description": "The success or failure status code returned in API response."
      },
      {
        "properties": "message",
        "type": "string",
        "description": "The success or failure messages returned in API response. Reasons of failure will be described in the message."
      },
      {
        "properties": "request_id",
        "type": "string",
        "description": "Request log"
      },
      {
        "properties": "data",
        "type": "object",
        "description": "Specific return information"
      }
    ],
    "examples": [
      {
        "language": "json",
        "code": "{\n  \"code\": 0,\n  \"data\": {},\n  \"message\": \"Success\",\n  \"request_id\": \"202203070749000101890810281E8C70B7\"\n}"
      }
    ]
  },
  "error_codes": [
    {
      "code": "11050001",
      "message": "invalid param"
    },
    {
      "code": "25001001",
      "message": "An invalid request parameter was passed. Please check that you have the correct parameter type(s) and format."
    },
    {
      "code": "25001003",
      "message": "Invalid order status."
    },
    {
      "code": "25001028",
      "message": "reverse lock failed"
    },
    {
      "code": "25001044",
      "message": "The return request cannot be approved."
    },
    {
      "code": "25001058",
      "message": "reverse downstream data load error"
    },
    {
      "code": "25007006",
      "message": "Order not found."
    },
    {
      "code": "25007007",
      "message": "ReverseOrderExistNegotiate"
    },
    {
      "code": "25011010",
      "message": "request has been transferred to platform operator"
    },
    {
      "code": "25011012",
      "message": "reverse status cannot approve application"
    },
    {
      "code": "25011013",
      "message": "reverse status cannot approve receive"
    },
    {
      "code": "25011023",
      "message": "forbid process authentic guarantee order"
    },
    {
      "code": "25011026",
      "message": "forbid process receive for FBT order"
    },
    {
      "code": "25011032",
      "message": "ReverseInvalidStatusPartialRefund"
    },
    {
      "code": "25020004",
      "message": "decision not match reverse type"
    },
    {
      "code": "25020005",
      "message": "no permission for role"
    },
    {
      "code": "25020008",
      "message": "reverse backend call downstream kitex error or reps is nil"
    },
    {
      "code": "25020009",
      "message": "reverse already cancelled"
    }
  ],
  "platform_specific": {
    "original_url": "https://partner.tiktokshop.com/docv2/page/650ab6c2c16ffe02b8f2efcf"
  }
}