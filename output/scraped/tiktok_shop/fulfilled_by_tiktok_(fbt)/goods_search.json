{
  "platform": "tiktok_shop",
  "module": "fulfilled_by_tiktok_(fbt)",
  "endpoint_name": "goods_search",
  "version": "202409",
  "summary": "This API is used to retrieve a list of goods belonging to the merchant that meet the specified conditions",
  "description": "This API is used to retrieve a list of goods belonging to the merchant that meet the specified conditions. It returns detailed information about the goods, including their IDs, names, and other attributes, such as the goods-SKU relationship, dimensions, and weight as verified by the warehouse. Version\n202409\n  \nAPI Testing Tool",
  "path": "/fbt/202409/goods/search",
  "http_method": [
    "POST"
  ],
  "parameters": {
    "path": [],
    "query": [
      {
        "properties": "shop_cipher Required",
        "type": "string",
        "description": "Use this property to pass shop information in requesting the API. Failure in passing the correct value when requesting the API for cross-border shops will return incorrect response.  Get by API Get Authorization Shop"
      },
      {
        "properties": "page_size Required",
        "type": "int",
        "description": "The number of results to be returned per page.  Valid range: [1-100]."
      },
      {
        "properties": "page_token",
        "type": "string",
        "description": "An opaque token used to retrieve the next page of a paginated result set. Retrieve this value from the result of the next_page_token from a previous response. It is not needed for the first page."
      },
      {
        "properties": "app_key Required",
        "type": "string",
        "description": "Every single app will have a unique key. Please use the specific key assigned to your app."
      },
      {
        "properties": "sign Required",
        "type": "string",
        "description": "Signature generated by gen algorithm. When you send API requests to TTS, you must sign them so that TTS can identify the senders."
      },
      {
        "properties": "timestamp Required",
        "type": "string",
        "description": "Unix timestamp GMT (UTC+00:00). This timestamp is used across all API requests. Developers can use this convert to local time."
      }
    ],
    "header": [
      {
        "properties": "content-type Required",
        "type": "string",
        "description": "Allowed type: application/json"
      },
      {
        "properties": "x-tts-access-token Required",
        "type": "string",
        "description": "The seller access_token value from Get Access Token, when user_type = 0. Follow this guide to get seller access_token."
      }
    ],
    "body": [
      {
        "properties": "goods_ids",
        "type": "[]string",
        "description": "Identifier for goods generated by Fulfilled by TikTok system, maximum length 100. Filter the goods information to display only those with specific goods IDs. Note: When goods_ids, reference_codes, sku_ids, or product_ids include two or more values, the result will return the intersection of the goods information. For example, if the input includes both goods_ids and sku_ids, it will return only the goods that meet both the goods_ids and sku_ids criteria. If requested with all criteria empty, it will return a page_size number of goods defined by the merchant, sorted by creation time, with the latest first."
      },
      {
        "properties": "product_ids",
        "type": "[]string",
        "description": "Identifier for product generated by TikTok Shop system, maximum length 100. Filter the goods information to display only those with specific product IDs."
      },
      {
        "properties": "reference_codes",
        "type": "[]string",
        "description": "Identifier for goods defined by merchant, maximum length 100. Filter the goods information to display only those with specific reference codes."
      },
      {
        "properties": "sku_ids",
        "type": "[]string",
        "description": "Identifier for Stock Keeping Unit (SKU) generated by TikTok Shop system, maximum length 100. Filter the goods information to display only those with specific SKU IDs."
      }
    ],
    "common": []
  },
  "request_examples": [],
  "response": {
    "schema": [
      {
        "properties": "code",
        "type": "int",
        "description": "The success or failure status code returned in API response."
      },
      {
        "properties": "message",
        "type": "string",
        "description": "The success or failure messages returned in API response. Reasons of failure will be described in the message."
      },
      {
        "properties": "request_id",
        "type": "string",
        "description": "Request log"
      },
      {
        "properties": "data",
        "type": "object",
        "description": "Specific return information",
        "children": [
          {
            "properties": "next_page_token",
            "type": "string",
            "description": "An opaque token used to retrieve the next page of a paginated result set. Provide this value in the page_token parameter of your request if the current response does not return all the results."
          },
          {
            "properties": "total_count",
            "type": "int",
            "description": "The total number of goods that meet the query conditions."
          },
          {
            "properties": "goods",
            "type": "[]object",
            "description": "A list of detailed information for Fulfilled by TikTok goods.",
            "children": [
              {
                "properties": "id",
                "type": "string",
                "description": "The identifier for goods generated by Fulfilled by TikTok system."
              },
              {
                "properties": "name",
                "type": "string",
                "description": "The goods name."
              },
              {
                "properties": "barcodes",
                "type": "[]object",
                "description": "A list of detailed information for goods barcodes.",
                "children": [
                  {
                    "properties": "code",
                    "type": "string",
                    "description": "The printable barcode for the goods."
                  },
                  {
                    "properties": "type",
                    "type": "string",
                    "description": "The barcode type. Possible values:  - UPC  - EAN  - GTIN - ASIN OR FNSKU  - MERCHANT SKU ID  - FBT SPECIFIC BARCODE"
                  },
                  {
                    "properties": "reference_code",
                    "type": "string",
                    "description": "The identifier for goods defined by merchant."
                  },
                  {
                    "properties": "image_url",
                    "type": "string",
                    "description": "The goods image url."
                  }
                ]
              },
              {
                "properties": "merchant_declaration_info",
                "type": "object",
                "description": "The dimension and weight info input by merchant.",
                "children": [
                  {
                    "properties": "weight",
                    "type": "object",
                    "description": "The goods weight.",
                    "children": [
                      {
                        "properties": "value",
                        "type": "string",
                        "description": "Weight value, up to three decimal places."
                      },
                      {
                        "properties": "unit",
                        "type": "string",
                        "description": "Weight unit. Possible values: - MILLIGRAM  - GRAM - KILOGRAM  - POUND  - OUNCE"
                      }
                    ]
                  },
                  {
                    "properties": "dimension",
                    "type": "object",
                    "description": "The goods dimension.",
                    "children": [
                      {
                        "properties": "width",
                        "type": "string",
                        "description": "Width value, up to three decimal places."
                      },
                      {
                        "properties": "length",
                        "type": "string",
                        "description": "Length value, up to three decimal places."
                      },
                      {
                        "properties": "height",
                        "type": "string",
                        "description": "Height value, up to three decimal places."
                      },
                      {
                        "properties": "unit",
                        "type": "string",
                        "description": "Dimension unit.  Possible values: - MILLIMETER  - CENTIMETER - METER  - FOOT  - INCH - MICROMETER"
                      }
                    ]
                  }
                ]
              },
              {
                "properties": "warehouse_confirmation_info",
                "type": "object",
                "description": "The dimension and weight information verified by warehouse when first inbound.",
                "children": [
                  {
                    "properties": "weight",
                    "type": "object",
                    "description": "The goods weight.",
                    "children": [
                      {
                        "properties": "value",
                        "type": "string",
                        "description": "Weight value verified by warehouse, up to three decimal places."
                      },
                      {
                        "properties": "unit",
                        "type": "string",
                        "description": "Weight unit. Possible values: - MILLIGRAM  - GRAM - KILOGRAM  - POUND  - OUNCE"
                      }
                    ]
                  },
                  {
                    "properties": "dimension",
                    "type": "object",
                    "description": "The goods dimension.",
                    "children": [
                      {
                        "properties": "width",
                        "type": "string",
                        "description": "Width value verified by warehouse, up to three decimal places."
                      },
                      {
                        "properties": "length",
                        "type": "string",
                        "description": "Length value verified by warehouse, up to three decimal places."
                      },
                      {
                        "properties": "height",
                        "type": "string",
                        "description": "Height value verified by warehouse, up to three decimal places."
                      },
                      {
                        "properties": "unit",
                        "type": "string",
                        "description": "Dimension unit.  Possible values: - MILLIMETER  - CENTIMETER - METER  - FOOT  - INCH - MICRO"
                      }
                    ]
                  }
                ]
              },
              {
                "properties": "skus",
                "type": "[]object",
                "description": "A list of Stock Keeping Units (SKUs) infomation matched with current FBT goods.",
                "children": [
                  {
                    "properties": "id",
                    "type": "string",
                    "description": "The identifier for SKU generated by TikTok Shop system."
                  },
                  {
                    "properties": "name",
                    "type": "string",
                    "description": "The SKU name."
                  },
                  {
                    "properties": "image_url",
                    "type": "string",
                    "description": "The TikTok Shop SKU image url."
                  },
                  {
                    "properties": "product",
                    "type": "object",
                    "description": "The TikTok Shop product matched with current Fulfilled by TikTok goods.",
                    "children": [
                      {
                        "properties": "id",
                        "type": "string",
                        "description": "The identifier for product generated by TikTok Shop system."
                      },
                      {
                        "properties": "name",
                        "type": "string",
                        "description": "The TikTok Shop product name."
                      },
                      {
                        "properties": "image_url",
                        "type": "string",
                        "description": "The Tiktok Shop product image url."
                      },
                      {
                        "properties": "regions",
                        "type": "[]string",
                        "description": "The regions where the SKU is being sold, represented by region codes in the two-character ISO 3166-1 alpha-2 format."
                      },
                      {
                        "properties": "matched",
                        "type": "bool",
                        "description": "A flag indicating whether the Fulfilled by TikTok goods is matched with the TikTok Shop SKU. True: Matched. False: Not matched."
                      }
                    ]
                  }
                ]
              },
              {
                "properties": "lot_expiration_info",
                "type": "object",
                "description": "The goods lot control and expiration managment information.",
                "children": [
                  {
                    "properties": "is_lot_control",
                    "type": "bool",
                    "description": "A flag indicating whether the goods is under lot control.  True: Under lot control. False: Not under lot control. Note: Lot code and expiration date management information is mandatory for these product categories according to Fulfilled by TikTok guidelines."
                  },
                  {
                    "properties": "is_expiration_management",
                    "type": "bool",
                    "description": "A flag indicating whether the goods is under expiration managment.  True: Under expiration managment. False: Not under expiration managment."
                  },
                  {
                    "properties": "shelf_life_days",
                    "type": "int",
                    "description": "The goods shelf life days input by merchant, represent the total number of days the product remains usable or sellable from the time it is manufactured until its expiration."
                  },
                  {
                    "properties": "inbound_cutoff_days",
                    "type": "int",
                    "description": "The goods inbound cutoff days before expiration, represent the time period before the product's expiration when the warehouse will no longer accept inbound shipments."
                  },
                  {
                    "properties": "expiration_alert_days",
                    "type": "int",
                    "description": "The goods alert days before expired, represent the period of time before platform send expiration reminder alerts to the merchant."
                  },
                  {
                    "properties": "sales_cutoff_days",
                    "type": "int",
                    "description": "The goods sales cut off days before expired, represent the period of time before expiration in which the goods will no longer be available for sale."
                  },
                  {
                    "properties": "handling_method",
                    "type": "string",
                    "description": "The handling method for expired inventory.  Possible values: - TURN_INTO_DEFECTIVE_INVENTORY  - RETURN_TO_SUPPLIER  - DISPOSE"
                  },
                  {
                    "properties": "return_cycle",
                    "type": "string",
                    "description": "The return cycle applied when the handling method is set to RETURN_TO_SUPPLIER. In this case, the automatic creation of exit inventory orders will follow one of return cycle rules. Possible values: - ONCE_A_WEEK - ONCE_A_MONTH - ONCE_A_QUARTER"
                  },
                  {
                    "properties": "addresses",
                    "type": "object",
                    "description": "The goods return address for return to supplier handling method.",
                    "children": [
                      {
                        "properties": "name",
                        "type": "string",
                        "description": "The name of the contact person."
                      },
                      {
                        "properties": "phone_number",
                        "type": "string",
                        "description": "The phone number of the contact person."
                      },
                      {
                        "properties": "postal_code",
                        "type": "string",
                        "description": "Warehouse address postal code (also known as zip code)."
                      },
                      {
                        "properties": "region_code",
                        "type": "string",
                        "description": "Warehouse country or region code in two-character ISO 3166-1 alpha-2 format."
                      },
                      {
                        "properties": "state",
                        "type": "string",
                        "description": "Warehouse address state or province."
                      },
                      {
                        "properties": "district",
                        "type": "string",
                        "description": "Warehouse address district or county."
                      },
                      {
                        "properties": "city",
                        "type": "string",
                        "description": "Warehouse address city."
                      },
                      {
                        "properties": "address_line_1",
                        "type": "string",
                        "description": "The detail address line 1."
                      },
                      {
                        "properties": "address_line_2",
                        "type": "string",
                        "description": "The detail address line 2, additional address information(optional)."
                      },
                      {
                        "properties": "address_line_3",
                        "type": "string",
                        "description": "The detail address line 3, additional address information(optional)."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "examples": [
      {
        "language": "json",
        "code": "{\n  \"code\": 0,\n  \"data\": {\n    \"next_page_token\": \"cGFnZV9udW1iZXI9Mg==\",\n    \"total_count\": 123,\n    \"goods\": [\n      {\n        \"id\": \"86533997569\",\n        \"name\": \"water1.0\",\n        \"barcodes\": [\n          {\n            \"code\": \"014673829105\",\n            \"type\": \"UPC\"\n          }\n        ],\n        \"reference_code\": \"abc32323\",\n        \"image_url\": \"https://p-boei18n.byted.org/tos-boei18n-i-0euhj0x6u9/beec7f914a044902a0c5dc929b97d064~tplv-k3ldphp9j8-origin-jpeg.jpeg?\",\n        \"merchant_declaration_info\": {\n          \"weight\": {\n            \"value\": \"1.122\",\n            \"unit\": \"GRAM\"\n          },"
      }
    ]
  },
  "error_codes": [],
  "platform_specific": {
    "original_url": "https://partner.tiktokshop.com/docv2/page/670d587d6921310398a3af3d"
  }
}