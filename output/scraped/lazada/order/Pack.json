{
  "platform": "lazada",
  "module": "order",
  "endpoint_name": "Pack",
  "version": null,
  "summary": "Use this API to mark an order item as being packed",
  "description": "Use this API to mark an order item as being packed.",
  "path": "/order/fulfill/pack",
  "http_method": [
    "POST"
  ],
  "parameters": {
    "path": [],
    "query": [
      {
        "name": "packReq",
        "type": "Object",
        "required": true,
        "description": "request body"
      },
      {
        "name": "result",
        "type": "Object",
        "required": false,
        "description": null
      }
    ],
    "header": [],
    "body": [],
    "common": [
      {
        "name": "app_key",
        "type": "String",
        "required": true,
        "description": "Unique app ID issued by LAZADA Open Platform console when you apply for an app category"
      },
      {
        "name": "timestamp",
        "type": "String",
        "required": true,
        "description": "The time stamp of the request e.g. 1517820392000 (which translates to 5 February 2018 08:46:32) with less than 7200s difference from UTC time"
      },
      {
        "name": "access_token",
        "type": "String",
        "required": true,
        "description": "API interface call credentials"
      },
      {
        "name": "sign_method",
        "type": "String",
        "required": true,
        "description": "The HMAC hash algorithm you are using to calculate your signature"
      },
      {
        "name": "sign",
        "type": "String",
        "required": true,
        "description": "here (https://open.lazada.com/apps/doc/doc?nodeId=10450&docId=108068)"
      }
    ]
  },
  "request_examples": [
    {
      "language": "java",
      "code": "LazopClient client = new LazopClient(url, appkey, appSecret);\nLazopRequest request = new LazopRequest();\nrequest.setApiName(\"/order/fulfill/pack\");\nrequest.addApiParameter(\"packReq\", \"{\\\"pack_order_list\\\":[{\\\"order_item_list\\\":[\\\"[]\\\",\\\"[]\\\"],\\\"order_id\\\":\\\"23423423\\\"},{\\\"order_item_list\\\":[\\\"[]\\\",\\\"[]\\\"],\\\"order_id\\\":\\\"23423423\\\"}],\\\"delivery_type\\\":\\\"dropship\\\",\\\"shipment_provider_code\\\":\\\"FM49\\\",\\\"shipping_allocate_type\\\":\\\"TFS\\\"}\");\nLazopResponse response = client.execute(request, accessToken);\nSystem.out.println(response.getBody());\nThread.sleep(10);"
    },
    {
      "language": "php",
      "code": "$c = new LazopClient(url,appkey,appSecret);\n$request = new LazopRequest('/order/fulfill/pack');\n$request->addApiParam('packReq','{\\\"pack_order_list\\\":[{\\\"order_item_list\\\":[\\\"[]\\\",\\\"[]\\\"],\\\"order_id\\\":\\\"23423423\\\"},{\\\"order_item_list\\\":[\\\"[]\\\",\\\"[]\\\"],\\\"order_id\\\":\\\"23423423\\\"}],\\\"delivery_type\\\":\\\"dropship\\\",\\\"shipment_provider_code\\\":\\\"FM49\\\",\\\"shipping_allocate_type\\\":\\\"TFS\\\"}');\nvar_dump($c->execute($request, $accessToken));"
    },
    {
      "language": ".net",
      "code": "ILazopClient client = new LazopClient(url, appkey, appSecret);\nLazopRequest request = new LazopRequest();\nrequest.SetApiName(\"/order/fulfill/pack\");\nrequest.AddApiParameter(\"packReq\", \"{\\\"pack_order_list\\\":[{\\\"order_item_list\\\":[\\\"[]\\\",\\\"[]\\\"],\\\"order_id\\\":\\\"23423423\\\"},{\\\"order_item_list\\\":[\\\"[]\\\",\\\"[]\\\"],\\\"order_id\\\":\\\"23423423\\\"}],\\\"delivery_type\\\":\\\"dropship\\\",\\\"shipment_provider_code\\\":\\\"FM49\\\",\\\"shipping_allocate_type\\\":\\\"TFS\\\"}\");\nLazopResponse response = client.Execute(request, accessToken);\nConsole.WriteLine(response.IsError());\nConsole.WriteLine(response.Body);"
    },
    {
      "language": "ruby",
      "code": "client = LazopApiClient::Client.new(url, appkey, appSecret)\nrequest = LazopApiClient::Request.new('/order/fulfill/pack')\nrequest.add_api_parameter(\"packReq\", \"{\\\"pack_order_list\\\":[{\\\"order_item_list\\\":[\\\"[]\\\",\\\"[]\\\"],\\\"order_id\\\":\\\"23423423\\\"},{\\\"order_item_list\\\":[\\\"[]\\\",\\\"[]\\\"],\\\"order_id\\\":\\\"23423423\\\"}],\\\"delivery_type\\\":\\\"dropship\\\",\\\"shipment_provider_code\\\":\\\"FM49\\\",\\\"shipping_allocate_type\\\":\\\"TFS\\\"}\")\nresponse = client.execute(request, accessToken)\nputs response.success?\nputs response.body"
    },
    {
      "language": "python",
      "code": "client = lazop.LazopClient(url, appkey ,appSecret)\nrequest = lazop.LazopRequest('/order/fulfill/pack')\nrequest.add_api_param('packReq', '{\\\"pack_order_list\\\":[{\\\"order_item_list\\\":[\\\"[]\\\",\\\"[]\\\"],\\\"order_id\\\":\\\"23423423\\\"},{\\\"order_item_list\\\":[\\\"[]\\\",\\\"[]\\\"],\\\"order_id\\\":\\\"23423423\\\"}],\\\"delivery_type\\\":\\\"dropship\\\",\\\"shipment_provider_code\\\":\\\"FM49\\\",\\\"shipping_allocate_type\\\":\\\"TFS\\\"}')\nresponse = client.execute(request, access_token)\nprint(response.type)\nprint(response.body)"
    },
    {
      "language": "curl",
      "code": "curl -X POST url + '/order/fulfill/pack' \\\n-H 'Content-Type:application/json;charset=utf-8' \\\n-d '{\"access_token\":\"37c66819338b4562e17675b8c5c4dbd0\",\"sign_method\":\"sha256\",\"sign\":\"D13F2A03BE94D9AAE9F933FFA7B13E0A5AD84A3DAEBC62A458A3C382EC2E91EC\",\"packReq\":\"%7B%22pack_order_list%22%3A%5B%7B%22order_item_list%22%3A%5B%22%5B%5D%22%2C%22%5B%5D%22%5D%2C%22order_id%22%3A%2223423423%22%7D%2C%7B%22order_item_list%22%3A%5B%22%5B%5D%22%2C%22%5B%5D%22%5D%2C%22order_id%22%3A%2223423423%22%7D%5D%2C%22delivery_type%22%3A%22dropship%22%2C%22shipment_provider_code%22%3A%22FM49%22%2C%22shipping_allocate_type%22%3A%22TFS%22%7D\",\"app_key\":\"1234567\",\"timestamp\":\"1750231602230\"}'"
    }
  ],
  "response": {
    "schema": [
      {
        "name": "result",
        "type": "Object",
        "description": "resp body"
      }
    ],
    "examples": [
      {
        "language": "json",
        "code": "{\n  \"result\": {\n    \"error_msg\": \"order not found\",\n    \"data\": {\n      \"pack_order_list\": [\n        {\n          \"order_item_list\": [\n            {\n              \"order_item_id\": \"560694402292001\",\n              \"msg\": \"success\",\n              \"item_err_code\": \"0\",\n              \"tracking_number\": \"TH340231JV0W0A\",\n              \"shipment_provider\": \"Flash Express\",\n              \"package_id\": \"FP022511752246001\",\n              \"retry\": \"false\"\n            }\n          ],\n          \"order_id\": \"560694402192001\"\n        }\n      ]\n    },\n    \"success\": \"true\",\n    \"error_code\": \"700100\"\n  },\n  \"code\": \"0\",\n  \"request_id\": \"0ba2887315178178017221014\"\n}"
      }
    ]
  },
  "error_codes": [
    {
      "code": "6",
      "message": "SYSTEM_ERROR",
      "description": "system is busy now ,pls try later"
    },
    {
      "code": "1003",
      "message": "E1003_3PL_ALLOCATION_FAIL",
      "description": "3pl allocation failed"
    },
    {
      "code": "40011",
      "message": "RPC_ERROR",
      "description": "system is busy now ,pls try later"
    },
    {
      "code": "700000",
      "message": "PACKAGE_STATUS_NOT_ALLOW_TO_OP",
      "description": "current package status not allow to operation"
    },
    {
      "code": "700001",
      "message": "DBS_SHIPMENT_PROVIDER_CODE_NOT_EXITS",
      "description": "shipment provider code not exits"
    },
    {
      "code": "700004",
      "message": "PARAM_ILLEGAL",
      "description": "param illegal"
    },
    {
      "code": "700013",
      "message": "OP_NOT_SUPPORT",
      "description": "operation is no support"
    },
    {
      "code": "700016",
      "message": "NOT_AVAILABLE_NTFS_3PL",
      "description": "seller not available 3pl , pls contact us to subscription 3pl"
    },
    {
      "code": "700017",
      "message": "PARAM_IS_NULL",
      "description": "param can't be null"
    },
    {
      "code": "700018",
      "message": "PARAM_SIZE_ERROR",
      "description": "param size not match"
    },
    {
      "code": "700019",
      "message": "PARAM_MIN_ERROR",
      "description": "param min not match"
    },
    {
      "code": "700020",
      "message": "ORDER_ITEM_NOT_FOUND_OR_NOT_BELONG_DIGITAL",
      "description": "order item not found or not belong to digital"
    },
    {
      "code": "700021",
      "message": "ORDER_NOT_FOUND",
      "description": "order not found"
    },
    {
      "code": "700022",
      "message": "BATCH_SIZE_OUT_OF_LIMIT",
      "description": "batch size out of limit"
    },
    {
      "code": "700023",
      "message": "PICKUP_IN_STORE_NO_SUPPORT",
      "description": "pickup in store order no allow to operation"
    },
    {
      "code": "700024",
      "message": "GET_LOCK_FAILED",
      "description": "failed get lock,pls try later"
    },
    {
      "code": "700025",
      "message": "ORDER_ITEM_NOT_FOUND",
      "description": "order item not found"
    },
    {
      "code": "700026",
      "message": "FO_ITEM_NOT_ALLOW_TO_PACK",
      "description": "item current status not allow to pack"
    },
    {
      "code": "700027",
      "message": "NOT_SUPPORT_FBL_TO_PACK",
      "description": "Does not support FBL order to pack"
    },
    {
      "code": "700028",
      "message": "NOT_SUPPORT_PACK_UP_IN_STORE_TO_PACK",
      "description": "Does not support pickup_in_store order to pack"
    },
    {
      "code": "700029",
      "message": "ITEM_MUST_BELONG_SAME_WAREHOUSE",
      "description": "item must belong same warehouse"
    },
    {
      "code": "700030",
      "message": "NOT_SUPPORT_DG_SERVICE_TO_PACK",
      "description": "digital or service order not need to pack"
    },
    {
      "code": "700031",
      "message": "ITEM_NOT_READY_TO_FULFILL",
      "description": "item not ready to fulfill"
    },
    {
      "code": "700032",
      "message": "SELLER_NOT_FOUND",
      "description": "can't found seller"
    },
    {
      "code": "700033",
      "message": "TRANSFERRING_WAREHOUSE_PROVIDER",
      "description": "transferringWarehouseCode cannot found"
    }
  ],
  "platform_specific": {
    "service_endpoints": [
      {
        "region": "Vietnam",
        "endpoint": "https://api.lazada.vn/rest"
      },
      {
        "region": "Singapore",
        "endpoint": "https://api.lazada.sg/rest"
      },
      {
        "region": "Philippines",
        "endpoint": "https://api.lazada.com.ph/rest"
      },
      {
        "region": "Malaysia",
        "endpoint": "https://api.lazada.com.my/rest"
      },
      {
        "region": "Thailand",
        "endpoint": "https://api.lazada.co.th/rest"
      },
      {
        "region": "Indonesia",
        "endpoint": "https://api.lazada.co.id/rest"
      }
    ]
  }
}