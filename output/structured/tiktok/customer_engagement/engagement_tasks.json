{
  "platform": "tiktok",
  "module": "customer_engagement",
  "endpoint_name": "engagement_tasks",
  "version": "202412",
  "summary": "Create an engagement task that acts as a container for grouping messages with similar content and rules, allowing sellers to track and compare task performance across different types of content",
  "description": "Create an engagement task that acts as a container for grouping messages with similar content and rules, allowing sellers to track and compare task performance across different types of content. Note that each task has a mandatory end time, and once expired, it cannot be used to send additional messages. Version\n202412\n  \nAPI Testing Tool",
  "path": "/customer_engagement/202412/engagement_tasks",
  "http_method": [
    "POST"
  ],
  "parameters": {
    "path": [],
    "query": [
      {
        "properties": "shop_cipher Required",
        "type": "string",
        "description": "Use this property to pass shop information in requesting the API. Failure in passing the correct value when requesting the API for cross-border shops will return incorrect response.  Get by API Get Authorization Shop"
      },
      {
        "properties": "app_key Required",
        "type": "string",
        "description": "Every single app will have a unique key. Please use the specific key assigned to your app."
      },
      {
        "properties": "sign Required",
        "type": "string",
        "description": "Signature generated by gen algorithm. When you send API requests to TTS, you must sign them so that TTS can identify the senders."
      },
      {
        "properties": "timestamp Required",
        "type": "int",
        "description": "Unix timestamp GMT (UTC+00:00). This timestamp is used across all API requests. Developers can use this convert to local time."
      },
      {
        "properties": "idempotency_key Required",
        "type": "string",
        "description": "A unique key to recognize a request and prevent duplicate processing of the same request, especially in cases of connection issues. Ensure this key is unique for each request to avoid accidental duplicates. Note: We recommend that you generate v4 UUIDs for use as keys."
      }
    ],
    "header": [
      {
        "properties": "content-type Required",
        "type": "string",
        "description": "Allowed type: application/json"
      },
      {
        "properties": "x-tts-access-token Required",
        "type": "string",
        "description": "The seller access_token value from Get Access Token, when user_type = 0. Follow this guide to get seller access_token."
      }
    ],
    "body": [
      {
        "properties": "template_id Required",
        "type": "string",
        "description": "The ID of engagement message templates predefined by TikTok Shop. Retrieve the value from Get Message Templates."
      },
      {
        "properties": "task_name Required",
        "type": "string",
        "description": "The name of the task."
      },
      {
        "properties": "end_time Required",
        "type": "int",
        "description": "The time at which the task ends, and messages will no longer be sent. Unix timestamp (seconds)."
      },
      {
        "properties": "channel Required",
        "type": "string",
        "description": "The engagement channel. Only TIKTOK_IM is supported."
      },
      {
        "properties": "product_ids",
        "type": "[]string",
        "description": "The product ID. Retrieve this value from the Search Products API."
      },
      {
        "properties": "coupon_ids",
        "type": "[]string",
        "description": "The coupon ID. Retrieve this value and other coupon-related information from the Search Coupons API.  Note: The coupon properties must comply with the rules defined in coupon_card_rules.coupon_type of the Get Message Templates API."
      }
    ],
    "common": []
  },
  "request_examples": [],
  "response": {
    "schema": [
      {
        "properties": "code",
        "type": "int",
        "description": "The success or failure status code returned in API response."
      },
      {
        "properties": "message",
        "type": "string",
        "description": "The success or failure messages returned in API response. Reasons of failure will be described in the message."
      },
      {
        "properties": "request_id",
        "type": "string",
        "description": "Request log"
      },
      {
        "properties": "data",
        "type": "object",
        "description": "Specific return information",
        "children": [
          {
            "properties": "task_id",
            "type": "string",
            "description": "The unique identifier for the customer engagement task. Pass this value in the Send Engagement Message API to associate the task with the message sending operation."
          }
        ]
      }
    ],
    "examples": [
      {
        "language": "json",
        "code": "{\n  \"code\": 0,\n  \"data\": {\n    \"task_id\": \"475910475643\"\n  },\n  \"message\": \"Success\",\n  \"request_id\": \"202203070749000101890810281E8C70B7\"\n}"
      }
    ]
  },
  "error_codes": [
    {
      "code": "68009001",
      "message": "Access denied. This endpoint is not available for this shop as the seller does not meet the access criteria for CRM features. See TikTok Shop Academy for details."
    },
    {
      "code": "68009005",
      "message": "Failed to create an engagement task. Error details:"
    }
  ],
  "platform_specific": {
    "original_url": "https://partner.tiktokshop.com/docv2/page/67777e436b61b002f60f01da"
  }
}