{
  "platform": "tiktok_shop",
  "module": "event",
  "endpoint_name": "webhooks",
  "version": "202309",
  "summary": "Deletes the shop's webhook URL for a specific event topic",
  "description": "Deletes the shop's webhook URL for a specific event topic.  Regardless of whether webhook is configured or not, the result will return success. Version\n202309\n  \nAPI Testing Tool",
  "path": "/event/202309/webhooks",
  "http_method": [
    "DEL"
  ],
  "parameters": {
    "path": [],
    "query": [
      {
        "properties": "shop_cipher Required",
        "type": "string",
        "description": "Use this property to pass shop information in requesting the API. Failure in passing the correct value when requesting the API for cross-border shops will return incorrect response.  Get by API Get Authorization Shop"
      },
      {
        "properties": "app_key Required",
        "type": "string",
        "description": "Every single app will have a unique key. Please use the specific key assigned to your app."
      },
      {
        "properties": "sign Required",
        "type": "string",
        "description": "Signature generated by gen algorithm. When you send API requests to TTS, you must sign them so that TTS can identify the senders."
      },
      {
        "properties": "timestamp Required",
        "type": "int",
        "description": "Unix timestamp GMT (UTC+00:00). This timestamp is used across all API requests. Developers can use this convert to local time."
      }
    ],
    "header": [
      {
        "properties": "content-type Required",
        "type": "string",
        "description": "Allowed type: application/json"
      },
      {
        "properties": "x-tts-access-token Required",
        "type": "string",
        "description": "The seller access_token value from Get Access Token, when user_type = 0. Follow this guide to get seller access_token."
      }
    ],
    "body": [
      {
        "properties": "event_type Required",
        "type": "string",
        "description": "The topic of the webhook event. Possible values: - ORDER_STATUS_CHANGE: Triggers on each order status update, from new order placement through all subsequent status changes. See Order Status change. - RECIPIENT_ADDRESS_UPDATE: Triggers when the recipient's address is updated. See Receipient address update. - PACKAGE_UPDATE: Triggers when a package is updated (e.g., combined, split, or address changed). See Package update. - PRODUCT_STATUS_CHANGE: Triggers when product audit results are updated. See Product status change. - SELLER_DEAUTHORIZATION: Triggers when a seller is deauthorized to inform developers and avoid misunderstandings about platform authorization issues. See Seller deauthorization. - UPCOMING_AUTHORIZATION_EXPIRATION: Triggers 30 days before authorization expiration, with daily notifications at 0:00 until re-authorization is completed. See Upcoming authorization expiration. - CANCELLATION_STATUS_CHANGE: Triggers when an order's cancellation status changes. See Cancellation status change. - RETURN_STATUS_CHANGE: Triggers when an order's return status changes. See Return status change. - NEW_CONVERSATION: Triggers when a customer service agent joins or leaves a conversation. See New conversation. - NEW_MESSAGE: Triggers when a new message is sent in a customer service conversation. See New Message. - PRODUCT_INFORMATION_CHANGE: Triggers when changes to a product's title, description, main images, or attributes go live. See Product information change. - PRODUCT_CREATION: Triggers when a new product is created. See Product creation. - PRODUCT_CATEGORY_CHANGE: Triggers when the category of a product is changed. See Product category change. - NEW_MESSAGE_LISTENER: Triggers when a creator sends a message to the seller. See New message listener. - INVOICE_STATUS_CHANGE: Triggers when the status of an invoice upload changes after using the POST Upload Invoice endpoint. See Invoice Status Change. - PRODUCT_AUDIT_STATUS_CHANGE: Triggers when the product audit status changes. See Product audit status change. - REVERSE_STATUS_UPDATE: Triggers when buyer raises cancellation, refund only, or return & refund requests that need the seller to accept or reject. See Reverse Status Update."
      }
    ],
    "common": []
  },
  "request_examples": [],
  "response": {
    "schema": [
      {
        "properties": "code",
        "type": "int",
        "description": "The success or failure status code returned in API response."
      },
      {
        "properties": "message",
        "type": "string",
        "description": "The success or failure messages returned in API response. Reasons of failure will be described in the message."
      },
      {
        "properties": "request_id",
        "type": "string",
        "description": "Request log"
      },
      {
        "properties": "data",
        "type": "object",
        "description": "Specific return information"
      }
    ],
    "examples": [
      {
        "language": "json",
        "code": "{\n  \"code\": 0,\n  \"data\": {},\n  \"message\": \"Success\",\n  \"request_id\": \"202203070749000101890810281E8C70B7\"\n}"
      }
    ]
  },
  "error_codes": [],
  "platform_specific": {
    "original_url": "https://partner.tiktokshop.com/docv2/page/650aa1eadefece02be6e224a"
  }
}