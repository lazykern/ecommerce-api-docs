{
  "platform": "tiktok_shop",
  "module": "return_refund",
  "endpoint_name": "cancellations_{cancel_id}_reject",
  "version": "202309",
  "summary": "Use this API to reject a buyer's order cancellation request",
  "description": "Use this API to reject a buyer's order cancellation request. Version\n202309\n  \nAPI Testing Tool",
  "path": "/return_refund/202309/cancellations/{cancel_id}/reject",
  "http_method": [
    "POST"
  ],
  "parameters": {
    "path": [],
    "query": [
      {
        "properties": "shop_cipher Required",
        "type": "string",
        "description": "Use this property to pass shop information in requesting the API. Failure in passing the correct value when requesting the API for cross-border shops will return incorrect response.  Get by API Get Authorization Shop"
      },
      {
        "properties": "app_key Required",
        "type": "string",
        "description": "Every single app will have a unique key. Please use the specific key assigned to your app."
      },
      {
        "properties": "sign Required",
        "type": "string",
        "description": "Signature generated by gen algorithm. When you send API requests to TTS, you must sign them so that TTS can identify the senders."
      },
      {
        "properties": "timestamp Required",
        "type": "int",
        "description": "Unix timestamp GMT (UTC+00:00). This timestamp is used across all API requests. Developers can use this convert to local time."
      },
      {
        "properties": "idempotency_key",
        "type": "string",
        "description": "The idempotency key is a unique value generated by the client which the server uses to recognize a request.   You may choose your own method of creating unique keys. We suggest using UUIDs, or another random string with enough entropy, to avoid collisions.   Idempotency keys can be up to 255 characters long."
      }
    ],
    "header": [
      {
        "properties": "content-type Required",
        "type": "string",
        "description": "Allowed type: application/json"
      },
      {
        "properties": "x-tts-access-token Required",
        "type": "string",
        "description": "The seller access_token value from Get Access Token, when user_type = 0. Follow this guide to get seller access_token."
      }
    ],
    "body": [
      {
        "properties": "reject_reason Required",
        "type": "string",
        "description": "Seller's reason to reject buyer's order cancellation request.   Please visit our cancel reason appendix to see a list of possible rejection reasons."
      },
      {
        "properties": "comment",
        "type": "string",
        "description": "Seller's comment on rejection decision. This is where a seller will provide more information about rejecting the request."
      },
      {
        "properties": "images",
        "type": "[]object",
        "description": "List of images provided by the seller to support seller's decision to reject the order cancellation request.",
        "children": [
          {
            "properties": "image_id Required",
            "type": "string",
            "description": "Image ID."
          },
          {
            "properties": "mime_type",
            "type": "string",
            "description": "MIME type."
          },
          {
            "properties": "height",
            "type": "int",
            "description": "Image height. Unit: px"
          },
          {
            "properties": "width",
            "type": "int",
            "description": "Image width. Unit: px"
          }
        ]
      }
    ],
    "common": []
  },
  "request_examples": [],
  "response": {
    "schema": [
      {
        "properties": "code",
        "type": "int",
        "description": "The success or failure status code returned in API response."
      },
      {
        "properties": "message",
        "type": "string",
        "description": "The success or failure messages returned in API response. Reasons of failure will be described in the message."
      },
      {
        "properties": "request_id",
        "type": "string",
        "description": "Request log"
      },
      {
        "properties": "data",
        "type": "object",
        "description": "Specific return information"
      }
    ],
    "examples": [
      {
        "language": "json",
        "code": "{\n  \"code\": 0,\n  \"data\": {},\n  \"message\": \"Success\",\n  \"request_id\": \"202203070749000101890810281E8C70B7\"\n}"
      }
    ]
  },
  "error_codes": [
    {
      "code": "11050001",
      "message": "invalid param"
    },
    {
      "code": "25001001",
      "message": "An invalid request parameter was passed. Please check that you have the correct parameter type(s) and format."
    },
    {
      "code": "25001003",
      "message": "Invalid order status."
    },
    {
      "code": "25001014",
      "message": "unknown reverse reason"
    },
    {
      "code": "25001016",
      "message": "reverse reason not match action type"
    },
    {
      "code": "25001020",
      "message": "reverse reason is offline"
    },
    {
      "code": "25001028",
      "message": "reverse lock failed"
    },
    {
      "code": "25001057",
      "message": "reverse reason not match reason type"
    },
    {
      "code": "25001058",
      "message": "reverse downstream data load error"
    },
    {
      "code": "25007006",
      "message": "Order not found."
    },
    {
      "code": "25011011",
      "message": "reverse status cannot reject application"
    },
    {
      "code": "25020003",
      "message": "decision not match reverse status"
    },
    {
      "code": "25020004",
      "message": "decision not match reverse type"
    },
    {
      "code": "25020005",
      "message": "no permission for role"
    },
    {
      "code": "25020010",
      "message": "Aftersales has been approved and cannot be rejected."
    }
  ],
  "platform_specific": {
    "original_url": "https://partner.tiktokshop.com/docv2/page/650ab6df0fcef602bf34528f"
  }
}