{
  "platform": "tiktok_shop",
  "module": "affiliate_partner",
  "endpoint_name": "campaigns_{campaign_id}_partial_edit​",
  "version": "202405",
  "summary": "This API offers the ability to edit an Affiliate Partner campaign",
  "description": "This API offers the ability to edit an Affiliate Partner campaign. No editing after the campaign is closed.​ Version\n202405\n  \nAPI Testing Tool\n​",
  "path": "/affiliate_partner/202405/campaigns/{campaign_id}/partial_edit​",
  "http_method": [
    "​\nPOST"
  ],
  "parameters": {
    "path": [],
    "query": [
      {
        "properties": "app_key​ Required​",
        "type": "string​",
        "description": "Every single app will have a unique key. Please use the specific key assigned to your app.​"
      },
      {
        "properties": "sign​ Required​",
        "type": "string​",
        "description": "Signature generated by gen algorithm. When you send API requests to TTS, you must sign them so that TTS can identify the senders. ​"
      },
      {
        "properties": "timestamp​ Required​",
        "type": "int​",
        "description": "Unix timestamp GMT (UTC+00:00). This timestamp is used across all API requests. Developers can use this convert to local time.​"
      },
      {
        "properties": "category_asset_cipher​ Required​",
        "type": "string​",
        "description": "The partner identifier used in API requests. Retrieve this value by using the [Get Authorized Category Assets API] (https://partner.tiktokshop.com/docv2/page/666012dd609d4402cc3be995). ​"
      }
    ],
    "header": [
      {
        "properties": "content-type​ Required​",
        "type": "string​",
        "description": "Allowed type: application/json​"
      },
      {
        "properties": "x-tts-access-token​ Required​",
        "type": "string​",
        "description": "The partner access_token value from Get Access Token, when user_type = 3. Follow this guide to get partner access_token.​"
      }
    ],
    "body": [
      {
        "properties": "name​",
        "type": "string​",
        "description": "The campaign name. The campaign name must be less than 50 characters.​"
      },
      {
        "properties": "description​",
        "type": "string​",
        "description": "The campaign description. The campaign description must be less than 1000 characters.​"
      },
      {
        "properties": "campaign_start_time​",
        "type": "int​",
        "description": "The scheduled start time in Unix epoch time format for the campaign. Note that this field can be updated when the campaign status is set to READY or UPCOMING only.​"
      },
      {
        "properties": "campaign_end_time​",
        "type": "int​",
        "description": "The scheduled end time in Unix epoch time format for the campaign. Note that the end time must be less than 360 days from the start date. This field is no longer editable when the campaign status is set to CLOSED. ​"
      },
      {
        "properties": "registration_start_time​",
        "type": "int​",
        "description": "The scheduled start time in Unix epoch format for seller product registration. Note that this field can be updated when the campaign status is set to READY or UPCOMING only.​"
      },
      {
        "properties": "registration_end_time​",
        "type": "int​",
        "description": "The scheduled end time in Unix epoch time format for seller product registration. This field is no longer editable when the campaign status is set to CLOSED.​"
      },
      {
        "properties": "commission_rate​",
        "type": "int​",
        "description": "The total commission rate in hundreds of a percent (0.01%) units proposed by the affiliate partner for display to sellers. Commission rate must be greater than 100 and less than 8000.​"
      },
      {
        "properties": "contact_info​",
        "type": "object​",
        "description": "The partner's contact information.​",
        "children": [
          {
            "properties": "whatsapp​",
            "type": "string​",
            "description": "The partner's phone number registered in WhatsApp. Applicable if the target market is MY, SG, GB, ID, or US.​"
          },
          {
            "properties": "email​",
            "type": "string​",
            "description": "The partner's email address.​"
          },
          {
            "properties": "phone​",
            "type": "string​",
            "description": "The partner's phone number.​"
          },
          {
            "properties": "zalo​",
            "type": "string​",
            "description": "The partner's phone number registered in Zalo. Applicable if the target market is VN.​"
          },
          {
            "properties": "viber​",
            "type": "string​",
            "description": "The partner's phone number registered in Viber. Applicable if the target market is PH.​"
          },
          {
            "properties": "line​",
            "type": "string​",
            "description": "The partner's phone number registered in LINE. Applicable if the target market is TH.​"
          },
          {
            "properties": "target_shop_codes​",
            "type": "[]string​",
            "description": "A list of TikTok Shop seller shop codes to allow to register for the campaign. The seller shop code in available in TikTok Shop Seller Central by clicking on the Seller Profile icon in the top right of the user interface. The list must be less than 100 items in length.​"
          },
          {
            "properties": "target_seller_types​",
            "type": "[]string​",
            "description": "A list of eligible seller types to allow to register for the campaign. Use this field to broadly target types of sellers instead of specific sellers in the target_shop_codes field. This is an enumerated type with possible values:​ - LOCAL​ - CROSS_BORDER​"
          }
        ]
      }
    ],
    "common": []
  },
  "request_examples": [],
  "response": {
    "schema": [
      {
        "properties": "code​",
        "type": "int​",
        "description": "The success or failure status code returned in API response.​"
      },
      {
        "properties": "message​",
        "type": "string​",
        "description": "The success or failure messages returned in API response. Reasons of failure will be described in the message.​"
      },
      {
        "properties": "request_id​",
        "type": "string​",
        "description": "Request log​"
      },
      {
        "properties": "data​",
        "type": "object​",
        "description": "Specific return information​"
      }
    ],
    "examples": [
      {
        "language": "json",
        "code": "{\n  \"code\": 0,\n  \"data\": {},\n  \"message\": \"Success\",\n  \"request_id\": \"202203070749000101890810281E8C70B7\"\n}"
      }
    ]
  },
  "error_codes": [
    {
      "code": "16032001​",
      "message": "Invalid parameter​"
    },
    {
      "code": "16032002​",
      "message": "Invalid campaign period​"
    },
    {
      "code": "16032003​",
      "message": "Invalid registration period​"
    },
    {
      "code": "16032004​",
      "message": "Invalid campaign seller scope​"
    },
    {
      "code": "16032005​",
      "message": "Campaign not found​"
    },
    {
      "code": "16032007​",
      "message": "Permission denied​"
    },
    {
      "code": "16032008​",
      "message": "Operation denied​"
    }
  ],
  "platform_specific": {
    "original_url": "https://partner.tiktokshop.com/docv2/page/66727bd09962ee02c1988d79"
  }
}