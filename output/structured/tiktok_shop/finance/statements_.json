{
  "platform": "tiktok_shop",
  "module": "finance",
  "endpoint_name": "statements​",
  "version": "202309",
  "summary": "Retrieves the statements generated for a shop and the key statement information based on a specified date range or their payment status",
  "description": "Retrieves the statements generated for a shop and the key statement information based on a specified date range or their payment status. Use this API to get an overview of your daily statements over a range of time, or to find out which statements have been paid or not. For the detailed transactions, refer to Get Statement Transactions or Get Order Statement Transactions.​ Applicable for all regions' sellers. Only data after 2023-07-01 is available.​ Version\n202309\n  \nAPI Testing Tool\n​",
  "path": "/finance/202309/statements​",
  "http_method": [
    "​\nGET"
  ],
  "parameters": {
    "path": [],
    "query": [
      {
        "properties": "shop_cipher​ Required​",
        "type": "string​",
        "description": "Use this property to pass shop information in requesting the API. Failure in passing the correct value when requesting the API for cross-border shops will return incorrect response. ​ Get by API Get Authorization Shop​"
      },
      {
        "properties": "app_key​ Required​",
        "type": "string​",
        "description": "Every single app will have a unique key. Please use the specific key assigned to your app.​"
      },
      {
        "properties": "statement_time_lt​",
        "type": "int​",
        "description": "Filter statements to show only those that are generated before the specified date and time. Unix timestamp.​ Refer to notes in statement_time_ge for more usage information.​"
      },
      {
        "properties": "payment_status​",
        "type": "string​",
        "description": "Filter statements based on the payment status.​ Possible values:​ - PAID: Payment has been transferred to the seller.​ - FAILED: Payment transfer failed.​ - PROCESSING: Payment is currently being processed.​ Default: All statuses are returned.​"
      },
      {
        "properties": "page_size​",
        "type": "int​",
        "description": "The number of results to be returned per page. ​ Default: 20​ Valid range: [1-100]​"
      },
      {
        "properties": "page_token​",
        "type": "string​",
        "description": "An opaque token used to retrieve the next page of a paginated result set. Retrieve this value from the result of the next_page_token from a previous response. It is not needed for the first page.​"
      },
      {
        "properties": "sort_field​ Required​",
        "type": "string​",
        "description": "The returned results will be sorted by the specified field. Only supports statement_time.​"
      },
      {
        "properties": "sort_order​",
        "type": "string​",
        "description": "The sort order for the sort_field parameter. ​ Default: ASC ​ Possible values:​ - ASC: Ascending order​ - DESC: Descending order​"
      },
      {
        "properties": "statement_time_ge​",
        "type": "int​",
        "description": "Filter statements to show only those that are generated on or after the specified date and time. Unix timestamp.​ ​ Note:​ statement_time_ge and statement_time_le together constitute the creation time filter condition.​ - If statement_time_ge is filled but statement_time_lt is empty, statement_time_lt will default to the current time.​ - If statement_time_lt is filled but statement_time_ge is empty, statement_time_ge will default to the earliest shop time.​ ​ Example:​ As statements are generated daily at 00:00 UTC, to retrieve statements for the period from Oct 5 to Oct 10, configure the parameters as follows:​ - Set statement_time_ge to 00:00 on Oct 6 or any time on Oct 5 (excluding 00:00).​ - Set statement_time_lt to any time on Oct 11 (excluding 00:00).​"
      },
      {
        "properties": "sign​ Required​",
        "type": "string​",
        "description": "Signature generated by gen algorithm. When you send API requests to TTS, you must sign them so that TTS can identify the senders. ​"
      },
      {
        "properties": "timestamp​ Required​",
        "type": "int​",
        "description": "Unix timestamp GMT (UTC+00:00). This timestamp is used across all API requests. Developers can use this convert to local time.​"
      }
    ],
    "header": [
      {
        "properties": "content-type​ Required​",
        "type": "string​",
        "description": "Allowed type: application/json​"
      },
      {
        "properties": "x-tts-access-token​ Required​",
        "type": "string​",
        "description": "The seller access_token value from Get Access Token, when user_type = 0. Follow this guide to get seller access_token.​"
      }
    ],
    "body": [],
    "common": []
  },
  "request_examples": [],
  "response": {
    "schema": [
      {
        "properties": "code​",
        "type": "int​",
        "description": "The success or failure status code returned in API response.​"
      },
      {
        "properties": "message​",
        "type": "string​",
        "description": "The success or failure messages returned in API response. Reasons of failure will be described in the message.​"
      },
      {
        "properties": "request_id​",
        "type": "string​",
        "description": "Request log​"
      },
      {
        "properties": "data​",
        "type": "object​",
        "description": "Specific return information​",
        "children": [
          {
            "properties": "next_page_token​",
            "type": "string​",
            "description": "An opaque token used to retrieve the next page of a paginated result set. Provide this value in the page_token parameter of your request if the current response does not return all the results.​"
          },
          {
            "properties": "statements​",
            "type": "[]object​",
            "description": "The list of statements that meet the query conditions.​",
            "children": [
              {
                "properties": "id​",
                "type": "string​",
                "description": "The statement ID.​"
              },
              {
                "properties": "statement_time​",
                "type": "int​",
                "description": "The time when the statement was generated. Unix timestamp. ​ Statements are generated daily at 00:00 UTC, and it includes all transactions from the past day.​ ​"
              },
              {
                "properties": "settlement_amount​",
                "type": "string​",
                "description": "The settlement amount. ​"
              },
              {
                "properties": "currency​",
                "type": "string​",
                "description": "The currency code in ISO 4217 format.​"
              },
              {
                "properties": "revenue_amount​",
                "type": "string​",
                "description": "The final revenue amount at the time of order settlement. ​ Applicable for all regions except UK and US.​"
              },
              {
                "properties": "fee_amount​",
                "type": "string​",
                "description": "The fees charged by TikTok Shop at the time of order settlement. An order is deemed settled a certain number of days after delivery (varies by region) if no returns or refunds are pending.​ ​ Note: Shipping-related costs are excluded, except for local sellers in the SEA region, where they are included.​"
              },
              {
                "properties": "adjustment_amount​",
                "type": "string​",
                "description": "The adjustment amount.​ For more details about the reason for adjustment, refer to the Get Statement Transactions API.​"
              },
              {
                "properties": "payment_status​",
                "type": "string​",
                "description": "The payment status, indicating whether payment has been transferred to the seller's bank account.​ Possible values:​ - PAID: Payment has been transferred to the seller.​ - FAILED: Payment transfer failed.​ - PROCESSING: Payment is currently being processed.​"
              },
              {
                "properties": "payment_id​",
                "type": "string​",
                "description": "The payment ID.​"
              },
              {
                "properties": "net_sales_amount​",
                "type": "string​",
                "description": "The final revenue amount after seller discounts are deducted.​ Applicable only for local sellers outside the SEA region.​ ​"
              },
              {
                "properties": "shipping_cost_amount​",
                "type": "string​",
                "description": "The shipping fees.​ Applicable only for local sellers outside the SEA region.​ ​"
              }
            ]
          }
        ]
      }
    ],
    "examples": [
      {
        "language": "json",
        "code": "{\n  \"code\": 0,\n  \"data\": {\n    \"next_page_token\": \"6AsPQsUMvH3RkchNUPPh22NROHkE0D8pmq/N5M1kHYcZmtRyv9aVrNv65W7Q6tFA+7D1ud64MPNz5OaT\",\n    \"statements\": [\n      {\n        \"id\": \"7238804564097517339\",\n        \"statement_time\": 1685548800,\n        \"settlement_amount\": \"100\",\n        \"currency\": \"GBP\",\n        \"revenue_amount\": \"200\",\n        \"fee_amount\": \"-30\",\n        \"adjustment_amount\": \"-70\",\n        \"payment_status\": \"PAID\",\n        \"payment_id\": \"3459275187040258849\",\n        \"net_sales_amount\": \"-70\",\n        \"shipping_cost_amount\": \"-70\"\n      }\n    ]\n  },\n  \"message\": \"Success\",\n  \"request_id\": \"202203070749000101890810281E8C70B7\""
      }
    ]
  },
  "error_codes": [],
  "platform_specific": {
    "original_url": "https://partner.tiktokshop.com/docv2/page/650a676f0fcef602bf2b91f0"
  }
}