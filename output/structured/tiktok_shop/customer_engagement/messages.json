{
  "platform": "tiktok_shop",
  "module": "customer_engagement",
  "endpoint_name": "messages",
  "version": "202412",
  "summary": "Send messages to specific customers for a particular engagement task",
  "description": "Send messages to specific customers for a particular engagement task. Version\n202412\n  \nAPI Testing Tool",
  "path": "/customer_engagement/202412/messages",
  "http_method": [
    "POST"
  ],
  "parameters": {
    "path": [],
    "query": [
      {
        "properties": "shop_cipher Required",
        "type": "string",
        "description": "Use this property to pass shop information in requesting the API. Failure in passing the correct value when requesting the API for cross-border shops will return incorrect response.  Get by API Get Authorization Shop"
      },
      {
        "properties": "app_key Required",
        "type": "string",
        "description": "Every single app will have a unique key. Please use the specific key assigned to your app."
      },
      {
        "properties": "sign Required",
        "type": "string",
        "description": "Signature generated by gen algorithm. When you send API requests to TTS, you must sign them so that TTS can identify the senders."
      },
      {
        "properties": "timestamp Required",
        "type": "int",
        "description": "Unix timestamp GMT (UTC+00:00). This timestamp is used across all API requests. Developers can use this convert to local time."
      }
    ],
    "header": [
      {
        "properties": "content-type Required",
        "type": "string",
        "description": "Allowed type: application/json"
      },
      {
        "properties": "x-tts-access-token Required",
        "type": "string",
        "description": "The seller access_token value from Get Access Token, when user_type = 0. Follow this guide to get seller access_token."
      }
    ],
    "body": [
      {
        "properties": "buyer_emails Required",
        "type": "[]string",
        "description": "The anonymized email address of the buyer. Retrieve this value from the Get Order Details API. Note: You can only send messages to buyers who have placed at least one order with the shop in the past 365 days."
      },
      {
        "properties": "task_id",
        "type": "string",
        "description": "The ID of the associated customer engagement task. Use the value returned when you call the Create Engagement Task API. Note: Ensure the task is still active. You cannot send messages to tasks that have ended."
      }
    ],
    "common": []
  },
  "request_examples": [],
  "response": {
    "schema": [
      {
        "properties": "code",
        "type": "int",
        "description": "The success or failure status code returned in API response."
      },
      {
        "properties": "message",
        "type": "string",
        "description": "The success or failure messages returned in API response. Reasons of failure will be described in the message."
      },
      {
        "properties": "request_id",
        "type": "string",
        "description": "Request log"
      },
      {
        "properties": "data",
        "type": "object",
        "description": "Specific return information",
        "children": [
          {
            "properties": "errors",
            "type": "[]object",
            "description": "The list of errors that occurred.",
            "children": [
              {
                "properties": "code",
                "type": "int",
                "description": "The error code."
              },
              {
                "properties": "message",
                "type": "string",
                "description": "The error message."
              },
              {
                "properties": "detail",
                "type": "object",
                "description": "The details of the error.",
                "children": [
                  {
                    "properties": "buyer_email",
                    "type": "string",
                    "description": "The list of buyer email addresses where message delivery failed."
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "examples": [
      {
        "language": "json",
        "code": "{\n  \"code\": 0,\n  \"data\": {\n    \"errors\": [\n      {\n        \"code\": 68009003,\n        \"message\": \"The user adresss is invalid\",\n        \"detail\": {\n          \"buyer_email\": \"v4b1232DOUSGKQQ7YLNEMPPEPBORFEQ2A@scs.tiktokw.us\"\n        }\n      }\n    ]\n  },\n  \"message\": \"Success\",\n  \"request_id\": \"202203070749000101890810281E8C70B7\"\n}"
      }
    ]
  },
  "error_codes": [
    {
      "code": "68009001",
      "message": "Access denied. This endpoint is not available for this shop as the seller does not meet the access criteria for CRM features. See TikTok Shop Academy for details."
    },
    {
      "code": "68009002",
      "message": "The specified task has ended, and sending of messages is no longer allowed."
    },
    {
      "code": "68009003",
      "message": "The user adresss is invalid"
    },
    {
      "code": "68009004",
      "message": "Unable to send messages to the specified buyer email as the buyer has not placed an order with the shop in the past 365 days."
    }
  ],
  "platform_specific": {
    "original_url": "https://partner.tiktokshop.com/docv2/page/67777e448e882e030d29676e"
  }
}