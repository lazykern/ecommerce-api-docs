{
  "platform": "tiktok_shop",
  "module": "customer_engagement",
  "endpoint_name": "message_templates​",
  "version": "202412",
  "summary": "Get a library of customer engagement message templates predefined by TikTok Shop, which you can use directly in your customer engagement communications",
  "description": "Get a library of customer engagement message templates predefined by TikTok Shop, which you can use directly in your customer engagement communications.​ Version\n202412\n  \nAPI Testing Tool\n​",
  "path": "/customer_engagement/202412/message_templates​",
  "http_method": [
    "​\nGET"
  ],
  "parameters": {
    "path": [],
    "query": [
      {
        "properties": "shop_cipher​ Required​",
        "type": "string​",
        "description": "Use this property to pass shop information in requesting the API. Failure in passing the correct value when requesting the API for cross-border shops will return incorrect response. ​ Get by API Get Authorization Shop​"
      },
      {
        "properties": "app_key​ Required​",
        "type": "string​",
        "description": "Every single app will have a unique key. Please use the specific key assigned to your app.​"
      },
      {
        "properties": "sign​ Required​",
        "type": "string​",
        "description": "Signature generated by gen algorithm. When you send API requests to TTS, you must sign them so that TTS can identify the senders. ​"
      },
      {
        "properties": "timestamp​ Required​",
        "type": "int​",
        "description": "Unix timestamp GMT (UTC+00:00). This timestamp is used across all API requests. Developers can use this convert to local time.​"
      },
      {
        "properties": "shop_cipher​ Required​",
        "type": "string​",
        "description": "Shop_cipher is required for cross-border shops, and optional for local shops. It's unique for each shop. Get the this property from the Get Authorized Shop API dynamically. Use this property to pass shop information in requesting the API. Failure in passing the correct value when requesting the API for cross-border shops will return incorrect response.​"
      },
      {
        "properties": "locale​ Required​",
        "type": "string​",
        "description": "The BCP-47 locale codes for displaying the message content, delimited by commas. Default: en-US​ ​ Refer to Locale codes for the list of supported locale codes.​"
      }
    ],
    "header": [
      {
        "properties": "content-type​ Required​",
        "type": "string​",
        "description": "Allowed type: application/json​"
      },
      {
        "properties": "x-tts-access-token​ Required​",
        "type": "string​",
        "description": "The seller access_token value from Get Access Token, when user_type = 0. Follow this guide to get seller access_token.​"
      }
    ],
    "body": [],
    "common": []
  },
  "request_examples": [],
  "response": {
    "schema": [
      {
        "properties": "code​",
        "type": "int​",
        "description": "The success or failure status code returned in API response.​"
      },
      {
        "properties": "message​",
        "type": "string​",
        "description": "The success or failure messages returned in API response. Reasons of failure will be described in the message.​"
      },
      {
        "properties": "request_id​",
        "type": "string​",
        "description": "Request log​"
      },
      {
        "properties": "data​",
        "type": "object​",
        "description": "Specific return information​",
        "children": [
          {
            "properties": "message_templates​",
            "type": "[]object​",
            "description": "Customer engagement message templates predefined by TikTok Shop.​",
            "children": [
              {
                "properties": "id​",
                "type": "string​",
                "description": "The template ID.​"
              },
              {
                "properties": "message_title​",
                "type": "string​",
                "description": "The message title.​"
              },
              {
                "properties": "message_body​",
                "type": "string​",
                "description": "The message body.​"
              },
              {
                "properties": "product_card_rules​",
                "type": "object​",
                "description": "Rules on the number and type of interactive product cards that can be included in a message.​",
                "children": [
                  {
                    "properties": "min_count​",
                    "type": "int​",
                    "description": "The minimum number of product cards that must be included.​"
                  },
                  {
                    "properties": "max_count​",
                    "type": "int​",
                    "description": "The maximum number of product cards that can be included.​"
                  }
                ]
              },
              {
                "properties": "coupon_card_rules​",
                "type": "object​",
                "description": "Rules on the number and type of interactive coupon cards that can be included in a message.​",
                "children": [
                  {
                    "properties": "min_count​",
                    "type": "int​",
                    "description": "The minimum number of coupon cards that must be included.​"
                  },
                  {
                    "properties": "max_count​",
                    "type": "int​",
                    "description": "The maximum number of coupon cards that can be included.​"
                  },
                  {
                    "properties": "coupon_type​",
                    "type": "[]string​",
                    "description": "The types of coupon that can be included in the message. ​ Possible values:​ - REGULAR_ALL: Regular coupons that target all buyers. ​ Required coupon properties: coupons.display_type=REGULAR and coupons.target_buyer_segment=ALL in the Search Coupons API.​ - REGULAR_REPEAT: Regular coupons that target only repeat buyers. ​ Required coupon properties: coupons.display_type=REGULAR and coupons.target_buyer_segment=REPEAT_CUSTOMERS in the Search Coupons API.​"
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "examples": [
      {
        "language": "json",
        "code": "{\n  \"code\": 0,\n  \"data\": {\n    \"message_templates\": [\n      {\n        \"id\": \"8646958016719848812\",\n        \"message_title\": \"Meet your next favorite thing!\",\n        \"message_body\": \"We strive to create products with you in mind. Check out our newest drop to find your perfect fit that’s built for a confidence boost.\",\n        \"product_card_rules\": {\n          \"min_count\": 0,\n          \"max_count\": 4\n        },\n        \"coupon_card_rules\": {\n          \"min_count\": 1,\n          \"max_count\": 1,\n          \"coupon_type\": [\n            \"REGULAR_ALL,REGULAR_REPEAT\"\n          ]\n        }\n      }\n    ]\n  },"
      }
    ]
  },
  "error_codes": [
    {
      "code": "68009001​",
      "message": "Access denied. This endpoint is not available for this shop as the seller does not meet the access criteria for CRM features. See TikTok Shop Academy for details.​"
    }
  ],
  "platform_specific": {
    "original_url": "https://partner.tiktokshop.com/docv2/page/67777e44223fde02fdfdc157"
  }
}