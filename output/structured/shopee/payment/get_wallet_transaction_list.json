{
  "platform": "shopee",
  "module": "payment",
  "endpoint_name": "get_wallet_transaction_list",
  "version": "v2",
  "summary": "Use this API to get the transaction records of wallet",
  "description": "Use this API to get the transaction records of wallet. Only applicable for local shops",
  "path": "/api/v2/payment/get_wallet_transaction_list",
  "http_method": [
    "GET"
  ],
  "parameters": {
    "path": [],
    "query": [
      {
        "name": "page_no",
        "type": "int",
        "required": true,
        "description": "Specifies the starting entry of data to return in the current call. Default is 0. if data is more than one page, the offset can be some entry to start next call.",
        "sample": ""
      },
      {
        "name": "page_size",
        "type": "int",
        "required": true,
        "description": "If many transactions are available to retrieve, you may need to call GetTransactionList multiple times to retrieve all the data. Each result set is returned as a page of entries. Default is 40. Use the Pagination filters to control the maximum number of entries (<= 100) to retrieve per page (i.e., per call), the offset number to start next call. This integer value is usUed to specify the maximum number of entries to return in a single \"\"page\"\" of data.",
        "sample": ""
      },
      {
        "name": "create_time_from",
        "type": "int",
        "required": false,
        "description": "The create_time_from field is the starting date range. The maximum date range that may be specified with the create_time_from and create_time_to fields is 15 days.",
        "sample": ""
      },
      {
        "name": "create_time_to",
        "type": "int",
        "required": false,
        "description": "The create_time_to field is the ending date range. The maximum date range that may be specified with the create_time_from and create_time_to fields is 15 days.",
        "sample": ""
      },
      {
        "name": "wallet_type",
        "type": "string",
        "required": false,
        "description": "This field indicates the wallet type.",
        "sample": ""
      },
      {
        "name": "transaction_type",
        "type": "string",
        "required": false,
        "description": "Transaction type APIs: ESCROW_VERIFIED_ADD = 101; // Escrow has been verified and paid to seller ESCROW_VERIFIED_MINUS = 102; // Escrow has been verified and charged from seller as escrow amount is negative WITHDRAWAL_CREATED = 201; // The seller has created a withdrawal, so itâ€™s deducted from balance WITHDRAWAL_COMPLETED = 202; // The withdrawal has been completed, so the ongoing amount decreases. WITHDRAWAL_CANCELLED = 203; // The withdrawal has been canceled, so the amount is added back to the seller balance. Ongoing amount decreases as well. ADJUSTMENT_ADD = 401; // One adjustment item has been paid to seller ADJUSTMENT_MINUS = 402; // One adjustment item has been charged from seller FBS_ADJUSTMENT_ADD = 404; //One adjustment item related to Shopee fulfillment order is added to seller FBS_ADJUSTMENT_MINUS = 405; // One adjustment item related to Shopee fulfillment order is deducted from seller ADJUSTMENT_CENTER_ADD = 406; // One adjustment item has been added to seller wallet ADJUSTMENT_CENTER_DEDUCT = 407; // One adjustment item has been deducted from seller wallet FSF_COST_PASSING_DEDUCT = 408; FSF cost passing for canceled/invalid orders PERCEPTION_VAT_TAX_DEDUCT = 409; Extra charge for perception regime VAT tax (Argentina) PERCEPTION_TURNOVER_TAX_DEDUCT = 410; Extra charge for perception regime turnover tax (Argentina) PAID_ADS_CHARGE = 450; // Paid ads are charged from seller PAID_ADS_REFUND = 451; // Paid ads are refunded to seller FAST_ESCROW_DISBURSE = 452; // ADD. // The first disbursement of fast escrow has been paid to seller AFFILIATE_ADS_SELLER_FEE = 455; // DEDUCT // Affiliate ads seller fee is charged from seller AFFILIATE_ADS_SELLER_FEE_REFUND = 456; // ADD // Affiliate ads seller fee is refunded to seller FAST_ESCROW_DEDUCT = 458; // Fast escrow is deducted from seller balance in the event of return and refund FAST_ESCROW_DISBURSE_REMAIN = 459; // The second disbursement of fast escrow has been paid to seller AFFILIATE_FEE_DEDUCT = 460; // Affiliate MKT fee is charged from seller for using affiliate MKT services",
        "sample": ""
      },
      {
        "name": "money_flow",
        "type": "string",
        "required": false,
        "description": "It's to indicate whether user wants to only return : MONEY_IN = addition MONEY_OUT = Deduction if not specified, we will return all Note special case for TW JKO Pay, we will ignore Money_flow",
        "sample": ""
      },
      {
        "name": "transaction_tab_type",
        "type": "string",
        "required": false,
        "description": "NOTE: Only 1 'transaction tab type' value should be passed in. Passing in more than 1 value (eg: comma separated values) will return default response. This is because the request param treats the value passed in as a single string. This to indicates the updated filtering type that client can use to specify which transaction type we want to return. it will have : Default wallet_order_income wallet_adjustment_filter wallet_wallet_payment wallet_refund_from_order wallet_withdrawals fast_escrow_repayment fast_pay seller_loan corporate_loan pix_transactions_filter open_finance_transactions_filter Note for BR, wallet txn type that linked to pix_transactions_filter and open_finance_transactions_filter are classified as default type tab instead. therefore for Open API client who wants to query these 2 trx can put default as the filter in this type",
        "sample": ""
      }
    ],
    "header": [],
    "body": [],
    "common": []
  },
  "request_examples": [],
  "response": {
    "schema": [
      {
        "name": "response",
        "type": "object",
        "sample": "",
        "description": ""
      },
      {
        "name": "transaction_list",
        "type": "object[]",
        "sample": "",
        "description": ""
      },
      {
        "name": "status",
        "type": "string",
        "sample": "",
        "description": "The status of the transactionavailable values: FAILED,COMPLETED,PENDING,INITIAL."
      },
      {
        "name": "transaction_type",
        "type": "string",
        "sample": "",
        "description": "The type of transaction."
      },
      {
        "name": "amount",
        "type": "float",
        "sample": "",
        "description": "The amount of transaction."
      },
      {
        "name": "current_balance",
        "type": "float",
        "sample": "",
        "description": "The current balance of this account."
      },
      {
        "name": "create_time",
        "type": "int",
        "sample": "",
        "description": "The create time of the transaction."
      },
      {
        "name": "order_sn",
        "type": "string",
        "sample": "",
        "description": "Shopee's unique identifier for an order."
      },
      {
        "name": "refund_sn",
        "type": "string",
        "sample": "",
        "description": "The serial number of return."
      },
      {
        "name": "withdrawal_type",
        "type": "string",
        "sample": "",
        "description": "The type of withdrawal."
      },
      {
        "name": "transaction_fee",
        "type": "float",
        "sample": "",
        "description": "This field indicates the transaction fee."
      },
      {
        "name": "description",
        "type": "string",
        "sample": "",
        "description": "The detailed description of TOPUP SUCCESS and TOPUP FAILED."
      },
      {
        "name": "buyer_name",
        "type": "string",
        "sample": "",
        "description": "The name of buyer."
      },
      {
        "name": "pay_order_list",
        "type": "object[]",
        "sample": "",
        "description": ""
      },
      {
        "name": "order_sn",
        "type": "string",
        "sample": "",
        "description": "Shopee's unique identifier for an order."
      },
      {
        "name": "shop_name",
        "type": "string",
        "sample": "",
        "description": "Name of the shop."
      },
      {
        "name": "shop_name",
        "type": "string",
        "sample": "",
        "description": "Name of the shop."
      },
      {
        "name": "withdrawal_id",
        "type": "int",
        "sample": "",
        "description": "Withdrawal ID when transaction type is withdraw_created, withdrawal_completed, withdrawal_cancelled."
      },
      {
        "name": "reason",
        "type": "string",
        "sample": "",
        "description": "The reason for ADJUSTMENT_ADD and ADJUSTMENT_MINUS."
      },
      {
        "name": "root_withdrawal_id",
        "type": "int",
        "sample": "",
        "description": "Use this field to indicate the event where a withdrawal is split into several withdrawals due to the withdrawal limit."
      },
      {
        "name": "transaction_tab_type",
        "type": "string",
        "sample": "",
        "description": "Description: A new response parameter added after: https://confluence.shopee.io/display/SPCT/%5BPRD%5D+%5BOpen+API%5D+Update+on+New+Open+API+to+fetch+Seller+wallet+Transaction This returns the updated transaction tab types that client can use to specify which transaction types they want to return. It will have the following tab types Default wallet_order_income wallet_adjustment_filter wallet_wallet_payment wallet_refund_from_order wallet_withdrawals fast_escrow_repayment fast_pay seller_loan corporate_loan pix_transactions_filter open_finance_transactions_filter Note for BR, currently in SOP live configuration, wallet txn type that linked to pix_transactions_filter and open_finance_transactions_filter are classified as default type tab instead. therefore for Open API client who wants to query these 2 txn can put default as the filter in this type"
      },
      {
        "name": "money_flow",
        "type": "string",
        "sample": "",
        "description": "New response parameter provided after: https://confluence.shopee.io/display/SPCT/%5BPRD%5D+%5BOpen+API%5D+Update+on+New+Open+API+to+fetch+Seller+wallet+Transaction It's to indicate the money flow MONEY_IN = addition MONEY_OUT = deduction if not specified in request, will return both Note special case for TW JKO Pay, we will ignore Money_flow"
      },
      {
        "name": "more",
        "type": "boolean",
        "sample": "",
        "description": ""
      },
      {
        "name": "request_id",
        "type": "string",
        "sample": "xduiwekui134",
        "description": ""
      },
      {
        "name": "message",
        "type": "string",
        "sample": "",
        "description": ""
      },
      {
        "name": "error",
        "type": "string",
        "sample": "",
        "description": ""
      }
    ],
    "examples": []
  },
  "error_codes": [
    {
      "code": "error_param",
      "message": "There is no access_token in query."
    },
    {
      "code": "error_auth",
      "message": "Invalid access_token."
    },
    {
      "code": "error_param",
      "message": "Invalid partner_id."
    },
    {
      "code": "error_param",
      "message": "There is no partner_id in query."
    },
    {
      "code": "error_auth",
      "message": "No permission to current api."
    },
    {
      "code": "error_param",
      "message": "There is no sign in query."
    },
    {
      "code": "error_sign",
      "message": "Wrong sign."
    },
    {
      "code": "error_param",
      "message": "no timestamp"
    },
    {
      "code": "error_param",
      "message": "Invalid timestamp"
    },
    {
      "code": "error_network",
      "message": "Inner http call failed"
    },
    {
      "code": "error_server",
      "message": "The inner server err when send http request."
    },
    {
      "code": "time_period_too_large",
      "message": "The param error: time period too large."
    },
    {
      "code": "time_invalid",
      "message": "The param error: create_time_from bigger than create_time_to."
    },
    {
      "code": "time_invalid",
      "message": "The param error: time is invalid"
    }
  ],
  "platform_specific": {
    "service_endpoints": [
      {
        "surroundings": "URL",
        "http_address": "https://partner.shopeemobile.com/api/v2/payment/get_wallet_transaction_list"
      },
      {
        "surroundings": "URLï¼ˆChinese Mainlandï¼‰",
        "http_address": "https://openplatform.shopee.cn/api/v2/payment/get_wallet_transaction_list"
      },
      {
        "surroundings": "URLï¼ˆBrazilï¼‰",
        "http_address": "https://openplatform.shopee.com.br/api/v2/payment/get_wallet_transaction_list"
      },
      {
        "surroundings": "Test URL",
        "http_address": "https://partner.test-stable.shopeemobile.com/api/v2/payment/get_wallet_transaction_list"
      },
      {
        "surroundings": "Test URLï¼ˆChinese Mainlandï¼‰",
        "http_address": "https://openplatform.test-stable.shopee.cn/api/v2/payment/get_wallet_transaction_list"
      },
      {
        "surroundings": "Test URL Sandbox v2",
        "http_address": "https://openplatform.sandbox.test-stable.shopee.sg/api/v2/payment/get_wallet_transaction_list"
      },
      {
        "surroundings": "Test URLï¼ˆChinese Mainlandï¼‰ Sandbox v2",
        "http_address": "https://openplatform.sandbox.test-stable.shopee.cn/api/v2/payment/get_wallet_transaction_list"
      }
    ]
  }
}