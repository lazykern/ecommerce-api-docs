{
  "platform": "shopee",
  "module": "payment",
  "endpoint_name": "get_billing_transaction_info",
  "version": "v2",
  "summary": "This API is applicable for Cross Border (CB) sellers only to get the detailed payout transaction data, both released and to-be released transaction can be found in here",
  "description": "This API is applicable for Cross Border (CB) sellers only to get the detailed payout transaction data, both released and to-be released transaction can be found in here",
  "path": "/api/v2/payment/get_billing_transaction_info",
  "http_method": [
    "POST"
  ],
  "parameters": {
    "path": [],
    "query": [
      {
        "name": "billing_transaction_info_type",
        "type": "int",
        "required": true,
        "description": "Billing transaction types: 1: TO_RELEASE, 2: RELEASED",
        "sample": "1"
      },
      {
        "name": "encrypted_payout_ids",
        "type": "string[]",
        "required": false,
        "description": "encrypted_payout_id get from API: v2.get_payout_info when encrypted_payout_id provided and billing_transaction_info_type=2, we will return the \"released\" billing items under this payout. when encrypted_payout_id not provided, we will return the \"to release\" billing items under hasn't form payout yet Max length: 100",
        "sample": "[\"10376329180766\",\"637926329180767\"]"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": true,
        "description": "Specifies the starting entry of data to return in the current call. Default is \"\". If data is more than one page, the offset can be some entry to start next call.",
        "sample": "\"\""
      },
      {
        "name": "page_size",
        "type": "int",
        "required": true,
        "description": "Number of pages returned max:100",
        "sample": "100"
      }
    ],
    "header": [],
    "body": [],
    "common": []
  },
  "request_examples": [
    {
      "language": "payload",
      "code": "{\n\t\"billing_transaction_info_type\": 1,\n\t\"encrypted_payout_ids\": [\n\t\t\"10376329180766\",\n\t\t\"637926329180767\"\n\t],\n\t\"cursor\": \"\\\"\\\"\",\n\t\"page_size\": 100\n}"
    },
    {
      "language": "java",
      "code": "Unirest.setTimeouts(0, 0);\nHttpResponse<String> response = Unirest.post(\"https://open.admin.uat.shopee.io/api/v2/payment/get_billing_transaction_info?access_token=access_token&partner_id=partner_id&shop_id=shop_id&sign=sign&timestamp=timestamp\")\n.header(\"Content-Type\",\"application/json\")\n.body(\"{\n   \\\"billing_transaction_info_type\\\": 1,\n   \\\"cursor\\\": \\\"\\\\\"\\\\\"\\\",\n   \\\"encrypted_payout_ids\\\": [\n      \\\"10376329180766\\\",\n      \\\"637926329180767\\\"\n   ],\n   \\\"page_size\\\": 100\n}\")\n.asString();"
    },
    {
      "language": "php",
      "code": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => 'https://open.admin.uat.shopee.io/api/v2/payment/get_billing_transaction_info?access_token=access_token&partner_id=partner_id&shop_id=shop_id&sign=sign&timestamp=timestamp',\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => '',\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 0,\n  CURLOPT_FOLLOWLOCATION => true,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => 'POST',\n  CURLOPT_POSTFIELDS => '{\n    \"billing_transaction_info_type\": 1,\n    \"cursor\": \"\\\\\"\\\\\"\",\n    \"encrypted_payout_ids\": [\n        \"10376329180766\",\n        \"637926329180767\"\n    ],\n    \"page_size\": 100\n}',\n  CURLOPT_HTTPHEADER => array(\n    'Content-Type: application/json'\n  ),\n));\n\n$response = curl_exec($curl);\n\ncurl_close($curl);\necho $response;"
    },
    {
      "language": "curl",
      "code": "curl --location --request POST 'https://open.admin.uat.shopee.io/api/v2/payment/get_billing_transaction_info?access_token=access_token&partner_id=partner_id&shop_id=shop_id&sign=sign&timestamp=timestamp' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n   \"billing_transaction_info_type\": 1,\n   \"cursor\": \"\\\"\\\"\",\n   \"encrypted_payout_ids\": [\n      \"10376329180766\",\n      \"637926329180767\"\n   ],\n   \"page_size\": 100\n}'"
    },
    {
      "language": "python",
      "code": "import requests\nimport json\n\nurl = \"https://open.admin.uat.shopee.io/api/v2/payment/get_billing_transaction_info?access_token=access_token&partner_id=partner_id&shop_id=shop_id&sign=sign&timestamp=timestamp\"\n\npayload=json.dumps({\n  \"billing_transaction_info_type\": 1,\n  \"cursor\": \"\\\"\\\"\",\n  \"encrypted_payout_ids\": [\n    \"10376329180766\",\n    \"637926329180767\"\n  ],\n  \"page_size\": 100\n})\nheaders = {\n  'Content-Type': 'application/json'\n}\nresponse = requests.RPCRequest(\"POST\",url,headers=headers, data=payload, allow_redirects=False)\n\nprint(response.text)"
    }
  ],
  "response": {
    "schema": [
      {
        "name": "error",
        "type": "string",
        "sample": "",
        "description": "Error code"
      },
      {
        "name": "message",
        "type": "string",
        "sample": "",
        "description": "Error message"
      },
      {
        "name": "request_id",
        "type": "string",
        "sample": "10fff653c945a390f8e1323c6bdffff4",
        "description": "The identifier for an API request for error tracking."
      },
      {
        "name": "response",
        "type": "object",
        "sample": "",
        "description": ""
      },
      {
        "name": "transactions",
        "type": "object",
        "sample": "",
        "description": ""
      },
      {
        "name": "amount",
        "type": "float",
        "sample": "-594.78",
        "description": "each transaction's amount"
      },
      {
        "name": "currency",
        "type": "string",
        "sample": "SGD",
        "description": "transaction currency"
      },
      {
        "name": "order_sn",
        "type": "string",
        "sample": "SGD",
        "description": "transaction currency"
      },
      {
        "name": "cost_header",
        "type": "string",
        "sample": "Refund Amount",
        "description": "transaction belongs to which type"
      },
      {
        "name": "scenario",
        "type": "string",
        "sample": "Return Refund After Order Completed",
        "description": "transaction detailed scenarios"
      },
      {
        "name": "remark",
        "type": "string",
        "sample": "Deduction on return refund requests raised after order is completed",
        "description": "detailed description for this transactions"
      },
      {
        "name": "level",
        "type": "string",
        "sample": "Order",
        "description": "To define this transaction happen at order level or shop level. e.g. shop level adjustment"
      },
      {
        "name": "billing_transaction_type",
        "type": "string",
        "sample": "ADJUSTMENT",
        "description": "could be Escrow (Order Income) or Adjustment (for this order)"
      },
      {
        "name": "billing_transaction_status",
        "type": "string",
        "sample": "Released",
        "description": "Will be either \"To Release\" or \"Released\"."
      },
      {
        "name": "more",
        "type": "boolean",
        "sample": "false",
        "description": ""
      },
      {
        "name": "next_cursor",
        "type": "string",
        "sample": "false",
        "description": ""
      }
    ],
    "examples": [
      {
        "language": "json",
        "code": "{\n    \"response\": {\n        \"transactions\": [\n            {\n                \"amount\": -594.78,\n                \"currency\": \"SGD\",\n                \"order_sn\": \"230712RFB30UES\",\n                \"cost_header\": \"Refund Amount\",\n                \"scenario\": \"Return Refund After Order Completed\",\n                \"remark\": \"Deduction on return refund requests raised after order is completed\",\n                \"level\": \"ORDER\",\n                \"billing_transaction_type\": \"ADJUSTMENT\",\n                \"billing_transaction_status\": \"RELEASED\"\n            }\n        ],\n        \"more\": false,\n        \"next_cursor\": \"\"\n    },\n    \"error\": \"\",\n    \"message\": \"\",\n    \"request_id\": \"dec735be0923db4f300912f713010900\"\n}"
      }
    ]
  },
  "error_codes": [
    {
      "code": "error_param",
      "message": "cursor is required and format should be correct. Please check"
    },
    {
      "code": "common.error_not_found",
      "message": "Unknown error: ***. Something wrong. Please try later."
    },
    {
      "code": "error_param",
      "message": "page_size is required, format should be correct and input within 1-100"
    },
    {
      "code": "error_param",
      "message": "payout ids{id1,id2,...} not found, please recheck if the id is correct or not"
    },
    {
      "code": "error_param",
      "message": "payout ids can not be empty when querying Released info"
    },
    {
      "code": "error_param",
      "message": "payout ids length exceed limit"
    },
    {
      "code": "error_param",
      "message": "shop_id is required"
    },
    {
      "code": "error_param",
      "message": "billing_transaction_info_type is required"
    },
    {
      "code": "error_param",
      "message": "There is no access_token in query."
    },
    {
      "code": "error_auth",
      "message": "Invalid access_token."
    },
    {
      "code": "error_param",
      "message": "Invalid partner_id."
    },
    {
      "code": "error_param",
      "message": "There is no partner_id in query."
    },
    {
      "code": "error_param",
      "message": "There is no sign in query."
    },
    {
      "code": "error_sign",
      "message": "Wrong sign."
    },
    {
      "code": "error_param",
      "message": "no timestamp"
    },
    {
      "code": "error_param",
      "message": "Invalid timestamp"
    },
    {
      "code": "error_server",
      "message": "Internal server error"
    },
    {
      "code": "error_param",
      "message": "The request body is not a valid json format"
    },
    {
      "code": "error_param",
      "message": "This payment API is only applicable for cross boarder shop"
    }
  ],
  "platform_specific": {
    "service_endpoints": [
      {
        "surroundings": "URL",
        "http_address": "https://partner.shopeemobile.com/api/v2/payment/get_billing_transaction_info"
      },
      {
        "surroundings": "URL（Chinese Mainland）",
        "http_address": "https://openplatform.shopee.cn/api/v2/payment/get_billing_transaction_info"
      },
      {
        "surroundings": "URL（Brazil）",
        "http_address": "https://openplatform.shopee.com.br/api/v2/payment/get_billing_transaction_info"
      },
      {
        "surroundings": "Test URL",
        "http_address": "https://partner.test-stable.shopeemobile.com/api/v2/payment/get_billing_transaction_info"
      },
      {
        "surroundings": "Test URL（Chinese Mainland）",
        "http_address": "https://openplatform.test-stable.shopee.cn/api/v2/payment/get_billing_transaction_info"
      },
      {
        "surroundings": "Test URL Sandbox v2",
        "http_address": "https://openplatform.sandbox.test-stable.shopee.sg/api/v2/payment/get_billing_transaction_info"
      },
      {
        "surroundings": "Test URL（Chinese Mainland） Sandbox v2",
        "http_address": "https://openplatform.sandbox.test-stable.shopee.cn/api/v2/payment/get_billing_transaction_info"
      }
    ]
  }
}