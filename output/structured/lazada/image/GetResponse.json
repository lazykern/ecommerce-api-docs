{
  "platform": "lazada",
  "module": "image",
  "endpoint_name": "GetResponse",
  "version": null,
  "summary": "Use this API to get the returned information from the system for the MigrateImages API",
  "description": "Use this API to get the returned information from the system for the MigrateImages API.",
  "path": "/image/response/get",
  "http_method": [
    "GET"
  ],
  "parameters": {
    "path": [],
    "query": [
      {
        "name": "batch_id",
        "type": "String",
        "required": true,
        "description": "Request ID from the MigrateImages request"
      },
      {
        "name": "data",
        "type": "Object",
        "required": false,
        "description": null
      }
    ],
    "header": [],
    "body": [],
    "common": [
      {
        "name": "app_key",
        "type": "String",
        "required": true,
        "description": "Unique app ID issued by LAZADA Open Platform console when you apply for an app category"
      },
      {
        "name": "timestamp",
        "type": "String",
        "required": true,
        "description": "The time stamp of the request e.g. 1517820392000 (which translates to 5 February 2018 08:46:32) with less than 7200s difference from UTC time"
      },
      {
        "name": "access_token",
        "type": "String",
        "required": true,
        "description": "API interface call credentials"
      },
      {
        "name": "sign_method",
        "type": "String",
        "required": true,
        "description": "The HMAC hash algorithm you are using to calculate your signature"
      },
      {
        "name": "sign",
        "type": "String",
        "required": true,
        "description": "here (https://open.lazada.com/apps/doc/doc?nodeId=10450&docId=108068)"
      }
    ]
  },
  "request_examples": [
    {
      "language": "java",
      "code": "LazopClient client = new LazopClient(url, appkey, appSecret);\nLazopRequest request = new LazopRequest();\nrequest.setApiName(\"/image/response/get\");\nrequest.setHttpMethod(\"GET\");\nrequest.addApiParameter(\"batch_id\", \"1e0bb81415173896232054839e\");\nLazopResponse response = client.execute(request, accessToken);\nSystem.out.println(response.getBody());\nThread.sleep(10);"
    },
    {
      "language": "php",
      "code": "$c = new LazopClient(url,appkey,appSecret);\n$request = new LazopRequest('/image/response/get','GET');\n$request->addApiParam('batch_id','1e0bb81415173896232054839e');\nvar_dump($c->execute($request, $accessToken));"
    },
    {
      "language": ".net",
      "code": "ILazopClient client = new LazopClient(url, appkey, appSecret);\nLazopRequest request = new LazopRequest();\nrequest.SetApiName(\"/image/response/get\");\nrequest.SetHttpMethod(\"GET\");\nrequest.AddApiParameter(\"batch_id\", \"1e0bb81415173896232054839e\");\nLazopResponse response = client.Execute(request, accessToken);\nConsole.WriteLine(response.IsError());\nConsole.WriteLine(response.Body);"
    },
    {
      "language": "ruby",
      "code": "client = LazopApiClient::Client.new(url, appkey, appSecret)\nrequest = LazopApiClient::Request.new('/image/response/get','GET')\nrequest.add_api_parameter(\"batch_id\", \"1e0bb81415173896232054839e\")\nresponse = client.execute(request, accessToken)\nputs response.success?\nputs response.body"
    },
    {
      "language": "python",
      "code": "client = lazop.LazopClient(url, appkey ,appSecret)\nrequest = lazop.LazopRequest('/image/response/get','GET')\nrequest.add_api_param('batch_id', '1e0bb81415173896232054839e')\nresponse = client.execute(request, access_token)\nprint(response.type)\nprint(response.body)"
    },
    {
      "language": "curl",
      "code": "curl -X GET url + '/image/response/get?timestamp=1750267055095&app_key=12345678&sign_method=sha256&sign=D13F2A03BE94D9AAE9F933FFA7B13E0A5AD84A3DAEBC62A458A3C382EC2E91EC&access_token=37c66819338b4562e17675b8c5c4dbd0&batch_id=1e0bb81415173896232054839e'"
    }
  ],
  "response": {
    "schema": [
      {
        "name": "data",
        "type": "Object",
        "description": "Response body"
      }
    ],
    "examples": [
      {
        "language": "json",
        "code": "{\n  \"code\": \"0\",\n  \"data\": {\n    \"images\": [\n      {\n        \"hash_code\": \"1f2ac2d7af810c498f88b2fc18686850\",\n        \"url\": \"https://sg-staging.slatic.net/original/1f2ac2d7af810c498f88b2fc18686850.jpg\"\n      }\n    ],\n    \"errors\": [\n      {\n        \"msg\": \"Error download image\",\n        \"field\": \"http://static.somecdn.externalSite.com/img4.jpeg\",\n        \"original_url\": \"http://pic4.nipic.com/20091217/3885730_124701000519_2.jpg\"\n      }\n    ]\n  },\n  \"request_id\": \"0ba2887315178178017221014\"\n}"
      }
    ]
  },
  "error_codes": [
    {
      "code": "5",
      "message": "E005: Invalid Request Format",
      "description": "The format of the request URL is not valid."
    },
    {
      "code": "6",
      "message": "E006: Unexpected internal error",
      "description": "Unexpected internal error."
    },
    {
      "code": "302",
      "message": "Not supported URL",
      "description": "The server is unable to download the image from the link, please check that the image link you added to the MigrateImages API responds with an HTTP status code of 200 and that your image meets the requirements of this document"
    },
    {
      "code": "301",
      "message": "Migrate Image Failed",
      "description": "The server is unable to download the image from the link, please check that the image link you added to the MigrateImages API responds with an HTTP status code of 200 and that your image meets the requirements of this document"
    },
    {
      "code": "1000",
      "message": "Internal Application Error",
      "description": "Please check that you are uploading a JPG or PGN image that meets the requirements, and if you are sure that there is nothing wrong with the image but encounter this error frequently, please create a ticket to inquire about it."
    }
  ],
  "platform_specific": {
    "service_endpoints": [
      {
        "region": "Vietnam",
        "endpoint": "https://api.lazada.vn/rest"
      },
      {
        "region": "Singapore",
        "endpoint": "https://api.lazada.sg/rest"
      },
      {
        "region": "Philippines",
        "endpoint": "https://api.lazada.com.ph/rest"
      },
      {
        "region": "Malaysia",
        "endpoint": "https://api.lazada.com.my/rest"
      },
      {
        "region": "Thailand",
        "endpoint": "https://api.lazada.co.th/rest"
      },
      {
        "region": "Indonesia",
        "endpoint": "https://api.lazada.co.id/rest"
      }
    ]
  }
}